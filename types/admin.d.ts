/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/v1/admin/geo": {
    /** Import Categories */
    post: operations["import_categories_api_v1_admin_geo_post"];
  };
  "/api/v1/admin/coaches": {
    /** Get Coaches */
    get: operations["get_coaches_api_v1_admin_coaches_get"];
  };
  "/api/v1/admin/coaches/count": {
    /** Get Coaches Count */
    get: operations["get_coaches_count_api_v1_admin_coaches_count_get"];
  };
  "/api/v1/admin/coach/{coach_id}": {
    /** Get Coach Details */
    get: operations["get_coach_details_api_v1_admin_coach__coach_id__get"];
    /** Update Coach */
    put: operations["update_coach_api_v1_admin_coach__coach_id__put"];
    /** Delete Coach */
    delete: operations["delete_coach_api_v1_admin_coach__coach_id__delete"];
  };
  "/api/v1/admin/coach": {
    /** Create New Coach */
    post: operations["create_new_coach_api_v1_admin_coach_post"];
  };
  "/api/v1/admin/coach/{coach_id}/boost-profile": {
    /** Boost Coach Profile */
    post: operations["boost_coach_profile_api_v1_admin_coach__coach_id__boost_profile_post"];
  };
  "/api/v1/admin/coach/{coach_id}/clients": {
    /** Get Coach Clients List */
    get: operations["get_coach_clients_list_api_v1_admin_coach__coach_id__clients_get"];
  };
  "/api/v1/admin/coach/{coach_id}/clients/count": {
    /** Get Coach Clients List Count */
    get: operations["get_coach_clients_list_count_api_v1_admin_coach__coach_id__clients_count_get"];
  };
  "/api/v1/admin/clients": {
    /** Get Clients */
    get: operations["get_clients_api_v1_admin_clients_get"];
  };
  "/api/v1/admin/clients/count": {
    /** Get Clients Count */
    get: operations["get_clients_count_api_v1_admin_clients_count_get"];
  };
  "/api/v1/admin/client/{client_id}": {
    /** Get Client Details */
    get: operations["get_client_details_api_v1_admin_client__client_id__get"];
    /** Update Client */
    put: operations["update_client_api_v1_admin_client__client_id__put"];
    /** Delete Client */
    delete: operations["delete_client_api_v1_admin_client__client_id__delete"];
  };
  "/api/v1/admin/client/{client_id}/info": {
    /** Get Client Summary Info */
    get: operations["get_client_summary_info_api_v1_admin_client__client_id__info_get"];
  };
  "/api/v1/admin/client": {
    /** Create New Client */
    post: operations["create_new_client_api_v1_admin_client_post"];
  };
  "/api/v1/admin/client/{client_id}/coaches": {
    /** Get Client Coaches List */
    get: operations["get_client_coaches_list_api_v1_admin_client__client_id__coaches_get"];
  };
  "/api/v1/admin/client/{client_id}/coaches/count": {
    /** Get Client Coaches List Count */
    get: operations["get_client_coaches_list_count_api_v1_admin_client__client_id__coaches_count_get"];
  };
  "/api/v1/admin/categories": {
    /** Get Categories */
    get: operations["get_categories_api_v1_admin_categories_get"];
  };
  "/api/v1/admin/category": {
    /** Post Create Category */
    post: operations["post_create_category_api_v1_admin_category_post"];
  };
  "/api/v1/admin/category/{category_id}": {
    /** Put Update Category */
    put: operations["put_update_category_api_v1_admin_category__category_id__put"];
    /** Delete Category */
    delete: operations["delete_category_api_v1_admin_category__category_id__delete"];
  };
  "/api/v1/admin/categories/order": {
    /** Set Category Order */
    put: operations["set_category_order_api_v1_admin_categories_order_put"];
  };
  "/api/v1/admin/category/import": {
    /**
     * Import Categories
     * @description Import business by csv file
     */
    post: operations["import_categories_api_v1_admin_category_import_post"];
  };
  "/api/v1/admin/business/import": {
    /**
     * Import Business
     * @description Import business by csv file
     */
    post: operations["import_business_api_v1_admin_business_import_post"];
  };
  "/api/v1/admin/business/import/external": {
    /**
     * Import Business External
     * @description Import business/branches by csv file
     */
    post: operations["import_business_external_api_v1_admin_business_import_external_post"];
  };
  "/api/v1/admin/business/autocomplete": {
    /** Get Business Autocomplete */
    get: operations["get_business_autocomplete_api_v1_admin_business_autocomplete_get"];
  };
  "/api/v1/admin/business/filters": {
    /** Get Business Filters */
    get: operations["get_business_filters_api_v1_admin_business_filters_get"];
  };
  "/api/v1/admin/businesses": {
    /** Search Businesses */
    post: operations["search_businesses_api_v1_admin_businesses_post"];
  };
  "/api/v1/admin/businesses/count": {
    /** Get Businesses Count */
    post: operations["get_businesses_count_api_v1_admin_businesses_count_post"];
  };
  "/api/v1/admin/business/{business_id}": {
    /** Get Business Details */
    get: operations["get_business_details_api_v1_admin_business__business_id__get"];
    /** Update Business Status */
    put: operations["update_business_status_api_v1_admin_business__business_id__put"];
    /** Delete Business */
    delete: operations["delete_business_api_v1_admin_business__business_id__delete"];
  };
  "/api/v1/admin/business": {
    /** Create New Business */
    post: operations["create_new_business_api_v1_admin_business_post"];
  };
  "/api/v1/admin/user/{user_id}/blacklist": {
    /** Get User Blacklist */
    get: operations["get_user_blacklist_api_v1_admin_user__user_id__blacklist_get"];
  };
  "/api/v1/admin/user/{user_id}/blacklist/count": {
    /** Get User Blacklist Count */
    get: operations["get_user_blacklist_count_api_v1_admin_user__user_id__blacklist_count_get"];
  };
  "/api/v1/admin/user/{user_id}/edit": {
    /** Edit User */
    put: operations["edit_user_api_v1_admin_user__user_id__edit_put"];
  };
  "/api/v1/admin/user/config": {
    /** User Config */
    get: operations["user_config_api_v1_admin_user_config_get"];
  };
  "/api/v1/admin/user/filters": {
    /** Get User Filters */
    get: operations["get_user_filters_api_v1_admin_user_filters_get"];
  };
  "/api/v1/admin/users": {
    /** Get Users */
    post: operations["get_users_api_v1_admin_users_post"];
  };
  "/api/v1/admin/users/count": {
    /** Get Users Count */
    post: operations["get_users_count_api_v1_admin_users_count_post"];
  };
  "/api/v1/admin/user/import": {
    /**
     * Import Users
     * @description Upload users from file
     * :param file: file format: email, phone, first_name, last_name
     * :param user:
     * :return:
     */
    post: operations["import_users_api_v1_admin_user_import_post"];
  };
  "/api/v1/admin/user/validate": {
    /** Validate User Registration */
    post: operations["validate_user_registration_api_v1_admin_user_validate_post"];
  };
  "/api/v1/admin/user/{user_id}/recover": {
    /** Get User Filters */
    post: operations["get_user_filters_api_v1_admin_user__user_id__recover_post"];
  };
  "/api/v1/admin/user/roles": {
    /** Get Support Roles */
    get: operations["get_support_roles_api_v1_admin_user_roles_get"];
  };
  "/api/v1/admin/user/roles/count": {
    /** Get Support Roles Count */
    get: operations["get_support_roles_count_api_v1_admin_user_roles_count_get"];
  };
  "/api/v1/admin/user/role": {
    /** Send User Invitation */
    post: operations["send_user_invitation_api_v1_admin_user_role_post"];
  };
  "/api/v1/admin/user/role/{user_id}": {
    /** Resend User Invitation */
    post: operations["resend_user_invitation_api_v1_admin_user_role__user_id__post"];
    /** Revoke User Access */
    delete: operations["revoke_user_access_api_v1_admin_user_role__user_id__delete"];
  };
  "/api/v1/admin/sessions": {
    /** Get Sessions */
    get: operations["get_sessions_api_v1_admin_sessions_get"];
  };
  "/api/v1/admin/sessions/count": {
    /** Get Session Count */
    get: operations["get_session_count_api_v1_admin_sessions_count_get"];
  };
  "/api/v1/admin/session/{session_id}": {
    /** Get Session */
    get: operations["get_session_api_v1_admin_session__session_id__get"];
  };
  "/api/v1/admin/session/{session_id}/refund": {
    /** Refund Session */
    put: operations["refund_session_api_v1_admin_session__session_id__refund_put"];
  };
  "/api/v1/admin/support/feedback": {
    /** Create Feedback */
    post: operations["create_feedback_api_v1_admin_support_feedback_post"];
  };
  "/api/v1/admin/reviews": {
    /** Get Reviews */
    get: operations["get_reviews_api_v1_admin_reviews_get"];
  };
  "/api/v1/admin/review/{user_id}/info": {
    /** Get Reviews Analytics Info */
    get: operations["get_reviews_analytics_info_api_v1_admin_review__user_id__info_get"];
  };
  "/api/v1/admin/review/{review_id}": {
    /** Update Review */
    put: operations["update_review_api_v1_admin_review__review_id__put"];
    /** Delete Review */
    delete: operations["delete_review_api_v1_admin_review__review_id__delete"];
  };
  "/api/v1/admin/transactions": {
    /** Get Transactions */
    get: operations["get_transactions_api_v1_admin_transactions_get"];
  };
  "/api/v1/admin/transactions/count": {
    /** Get Transaction Count */
    get: operations["get_transaction_count_api_v1_admin_transactions_count_get"];
  };
  "/api/v1/admin/transactions/info": {
    /** Get Transaction Info */
    get: operations["get_transaction_info_api_v1_admin_transactions_info_get"];
  };
  "/api/v1/admin/transaction/download": {
    /** Download Transaction File */
    get: operations["download_transaction_file_api_v1_admin_transaction_download_get"];
  };
  "/api/v1/admin/transaction/{transaction_id}": {
    /** Get Transaction Details */
    get: operations["get_transaction_details_api_v1_admin_transaction__transaction_id__get"];
  };
  "/api/v1/admin/transaction/{transaction_id}/refund": {
    /** Refund Transaction */
    put: operations["refund_transaction_api_v1_admin_transaction__transaction_id__refund_put"];
  };
  "/api/v1/admin/verifications": {
    /** Get Verifications */
    get: operations["get_verifications_api_v1_admin_verifications_get"];
  };
  "/api/v1/admin/verifications/count": {
    /** Get Verifications Count */
    get: operations["get_verifications_count_api_v1_admin_verifications_count_get"];
  };
  "/api/v1/admin/verification/{coach_id}/report": {
    /** Create Coach Report */
    post: operations["create_coach_report_api_v1_admin_verification__coach_id__report_post"];
  };
  "/api/v1/admin/refunds": {
    /** Get Refunds */
    get: operations["get_refunds_api_v1_admin_refunds_get"];
  };
  "/api/v1/admin/refunds/count": {
    /** Get Refunds Count */
    get: operations["get_refunds_count_api_v1_admin_refunds_count_get"];
  };
  "/api/v1/admin/refund/{refund_id}": {
    /** Get Refund Details */
    get: operations["get_refund_details_api_v1_admin_refund__refund_id__get"];
    /** Resolve Refund */
    put: operations["resolve_refund_api_v1_admin_refund__refund_id__put"];
  };
  "/api/v1/admin/reports": {
    /** Get Reports */
    get: operations["get_reports_api_v1_admin_reports_get"];
  };
  "/api/v1/admin/reports/count": {
    /** Get Reports Count */
    get: operations["get_reports_count_api_v1_admin_reports_count_get"];
  };
  "/api/v1/admin/report/{report_id}": {
    /** Get Report Details */
    get: operations["get_report_details_api_v1_admin_report__report_id__get"];
  };
  "/api/v1/admin/config/fields": {
    /** Get User Properties */
    get: operations["get_user_properties_api_v1_admin_config_fields_get"];
  };
  "/api/v1/admin/config/field": {
    /** Create New User Property */
    post: operations["create_new_user_property_api_v1_admin_config_field_post"];
  };
  "/api/v1/admin/config/field/{property_field_id}": {
    /** Update User Property */
    put: operations["update_user_property_api_v1_admin_config_field__property_field_id__put"];
    /** Delete User Property */
    delete: operations["delete_user_property_api_v1_admin_config_field__property_field_id__delete"];
  };
  "/api/v1/admin/config/consumers": {
    /** Get Consumers */
    get: operations["get_consumers_api_v1_admin_config_consumers_get"];
  };
  "/api/v1/admin/config/consumer": {
    /** Create Consumer */
    post: operations["create_consumer_api_v1_admin_config_consumer_post"];
  };
  "/api/v1/admin/config/consumer/{client_id}": {
    /** Update Consumer */
    put: operations["update_consumer_api_v1_admin_config_consumer__client_id__put"];
    /** Delete Consumer */
    delete: operations["delete_consumer_api_v1_admin_config_consumer__client_id__delete"];
  };
  "/api/v1/admin/config/languages": {
    /** Get Consumer Languages */
    get: operations["get_consumer_languages_api_v1_admin_config_languages_get"];
  };
  "/api/v1/admin/config/currencies": {
    /** Get Consumer Currencies */
    get: operations["get_consumer_currencies_api_v1_admin_config_currencies_get"];
  };
  "/api/v1/admin/config/service-types": {
    /** Bulk Create Service Types */
    post: operations["bulk_create_service_types_api_v1_admin_config_service_types_post"];
  };
  "/api/v1/admin/config/service-type/{service_type_id}": {
    /** Delete Service Type */
    delete: operations["delete_service_type_api_v1_admin_config_service_type__service_type_id__delete"];
  };
  "/api/v1/admin/config/method": {
    /** Create Or Update Method */
    post: operations["create_or_update_method_api_v1_admin_config_method_post"];
  };
  "/api/v1/admin/withdrawals": {
    /** Get Withdrawals */
    get: operations["get_withdrawals_api_v1_admin_withdrawals_get"];
  };
  "/api/v1/admin/withdrawals/count": {
    /** Get Withdrawals Count */
    get: operations["get_withdrawals_count_api_v1_admin_withdrawals_count_get"];
  };
  "/api/v1/admin/withdrawal/download": {
    /** Download Withdrawal File */
    get: operations["download_withdrawal_file_api_v1_admin_withdrawal_download_get"];
  };
  "/api/v1/admin/withdrawal/{withdrawal_id}": {
    /** Get Withdrawal Details */
    get: operations["get_withdrawal_details_api_v1_admin_withdrawal__withdrawal_id__get"];
  };
  "/api/v1/admin/analytics/revenue": {
    /** Revenue Analytics */
    get: operations["revenue_analytics_api_v1_admin_analytics_revenue_get"];
  };
  "/api/v1/admin/analytics/revenue-chart": {
    /** Revenue Chart Analytics */
    get: operations["revenue_chart_analytics_api_v1_admin_analytics_revenue_chart_get"];
  };
  "/api/v1/admin/analytics/session-info": {
    /** Session Info Analytics */
    get: operations["session_info_analytics_api_v1_admin_analytics_session_info_get"];
  };
  "/api/v1/admin/analytics/users": {
    /** Total User Analytics */
    get: operations["total_user_analytics_api_v1_admin_analytics_users_get"];
  };
  "/api/v1/admin/analytics/best-users": {
    /** Get Best User Analytics */
    get: operations["get_best_user_analytics_api_v1_admin_analytics_best_users_get"];
  };
  "/api/v1/admin/analytics/summary": {
    /** Get Admin Analytics Summary */
    get: operations["get_admin_analytics_summary_api_v1_admin_analytics_summary_get"];
  };
  "/api/v1/admin/analytics/coach/{coach_id}/summary": {
    /** Coach Analytics Summary */
    get: operations["coach_analytics_summary_api_v1_admin_analytics_coach__coach_id__summary_get"];
  };
  "/api/v1/admin/analytics/client/{client_id}/summary": {
    /** Client Analytics Summary */
    get: operations["client_analytics_summary_api_v1_admin_analytics_client__client_id__summary_get"];
  };
  "/api/v1/admin/analytics/dashboard": {
    /** Dashboard Analytics */
    get: operations["dashboard_analytics_api_v1_admin_analytics_dashboard_get"];
  };
  "/api/v1/admin/cache/sessions": {
    /** Cache Sessions */
    post: operations["cache_sessions_api_v1_admin_cache_sessions_post"];
  };
  "/api/v1/admin/cache/coaches": {
    /** Cache Coaches */
    post: operations["cache_coaches_api_v1_admin_cache_coaches_post"];
  };
  "/api/v1/admin/cache/sb-chat": {
    /** Cache Chat Users */
    post: operations["cache_chat_users_api_v1_admin_cache_sb_chat_post"];
  };
  "/api/v1/admin/cache/category": {
    /** Cache Categories */
    post: operations["cache_categories_api_v1_admin_cache_category_post"];
  };
  "/api/v1/admin/cache/businesses": {
    /** Cache Businesses */
    post: operations["cache_businesses_api_v1_admin_cache_businesses_post"];
  };
  "/api/v1/admin/cache/rebuild": {
    /** Rebuild Cache */
    post: operations["rebuild_cache_api_v1_admin_cache_rebuild_post"];
  };
  "/api/v1/admin/cache/analytics": {
    /** Cache Analytics */
    post: operations["cache_analytics_api_v1_admin_cache_analytics_post"];
  };
  "/api/v1/admin/cache/addresses": {
    /** Cache Addresses */
    post: operations["cache_addresses_api_v1_admin_cache_addresses_post"];
  };
  "/api/v1/admin/equipments": {
    /** Get Equipments */
    get: operations["get_equipments_api_v1_admin_equipments_get"];
  };
  "/api/v1/admin/equipments/count": {
    /** Get Equipments Count */
    get: operations["get_equipments_count_api_v1_admin_equipments_count_get"];
  };
  "/api/v1/admin/marketing-groups": {
    /** Get Marketing Groups */
    get: operations["get_marketing_groups_api_v1_admin_marketing_groups_get"];
  };
  "/api/v1/admin/marketing-group": {
    /** Create Marketing Group */
    post: operations["create_marketing_group_api_v1_admin_marketing_group_post"];
  };
  "/api/v1/admin/marketing-group/{marketing_id}": {
    /** Update Marketing Group */
    put: operations["update_marketing_group_api_v1_admin_marketing_group__marketing_id__put"];
    /** Delete Marketing Group */
    delete: operations["delete_marketing_group_api_v1_admin_marketing_group__marketing_id__delete"];
  };
  "/api/v1/admin/marketing-groups/order": {
    /** Set Marketing Groups Order */
    put: operations["set_marketing_groups_order_api_v1_admin_marketing_groups_order_put"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /**
     * Accommodations
     * @enum {string}
     */
    Accommodations: "apartment" | "hotel" | "flat" | "house" | "any" | "office" | "other" | "undefined";
    /** AddressBaseOut */
    AddressBaseOut: {
      /**
       * Lng
       * @example 55.296249
       */
      lng: number;
      /**
       * Lat
       * @example 25.276
       */
      lat: number;
      /**
       * Zoom
       * @default 17
       * @example 14
       */
      zoom?: number | null;
      /** @description accommodation */
      accommodation?: components["schemas"]["Accommodations"] | null;
      /** @description User allergy */
      allergy?: components["schemas"]["UserAllergy"] | null;
      /**
       * Address
       * @description Address
       * @example 548, floor 5, Cluster G, Tower Al mas, JLT, Dubai, UAE
       */
      address?: string | null;
      /**
       * Country
       * @description Country
       * @example United Arab Emirates
       */
      country?: string | null;
      /**
       * State
       * @description state
       * @example Dubai
       */
      state?: string | null;
      /**
       * City
       * @description city
       * @example Dubai
       */
      city?: string | null;
      /**
       * Line1
       * @description line1
       * @example Jumeirah Lake Towers
       */
      line1?: string | null;
      /**
       * Line2
       * @description line2
       * @example 1068, Tower Meadows 2
       */
      line2?: string | null;
      /**
       * Zip
       * @description zip (po box)
       */
      zip?: string | null;
      /**
       * Building
       * @description building
       * @example Tower Meadows 2
       */
      building?: string | null;
      /**
       * Entrance
       * @description entrance
       * @example main
       */
      entrance?: string | null;
      /**
       * Floor
       * @description floor
       * @example 12
       */
      floor?: string | null;
      /**
       * Apartment
       * @description apartment
       * @example 1245
       */
      apartment?: string | null;
      /**
       * Neighborhood
       * @description neighborhood
       */
      neighborhood?: string | null;
      /**
       * Radius
       * @description Radius in meters
       * @example 10000
       */
      radius?: number | null;
      /**
       * @description Location label
       * @default home
       * @example home
       */
      label?: components["schemas"]["LocationLabel"];
      /**
       * Labelother
       * @description Location label
       */
      labelOther?: string | null;
      /**
       * Details
       * @description notes for address
       */
      details?: string | null;
      parking?: components["schemas"]["ParkingType"] | null;
      /** Parkingdescription */
      parkingDescription?: string | null;
      /** Instructions */
      instructions?: string | null;
      /** Isdefault */
      isDefault?: boolean | null;
      /**
       * Name
       * @description name
       * @example Name of address
       */
      name?: string | null;
      /** Id */
      id?: string | null;
    };
    /** AddressOut */
    AddressOut: {
      /**
       * Lng
       * @example 55.296249
       */
      lng: number;
      /**
       * Lat
       * @example 25.276
       */
      lat: number;
      /**
       * Zoom
       * @default 17
       * @example 14
       */
      zoom?: number | null;
      /** @description accommodation */
      accommodation?: components["schemas"]["Accommodations"] | null;
      /** @description User allergy */
      allergy?: components["schemas"]["UserAllergy"] | null;
      /**
       * Address
       * @description Address
       * @example 548, floor 5, Cluster G, Tower Al mas, JLT, Dubai, UAE
       */
      address?: string | null;
      /**
       * Country
       * @description Country
       * @example United Arab Emirates
       */
      country?: string | null;
      /**
       * State
       * @description state
       * @example Dubai
       */
      state?: string | null;
      /**
       * City
       * @description city
       * @example Dubai
       */
      city?: string | null;
      /**
       * Line1
       * @description line1
       * @example Jumeirah Lake Towers
       */
      line1?: string | null;
      /**
       * Line2
       * @description line2
       * @example 1068, Tower Meadows 2
       */
      line2?: string | null;
      /**
       * Zip
       * @description zip (po box)
       */
      zip?: string | null;
      /**
       * Building
       * @description building
       * @example Tower Meadows 2
       */
      building?: string | null;
      /**
       * Entrance
       * @description entrance
       * @example main
       */
      entrance?: string | null;
      /**
       * Floor
       * @description floor
       * @example 12
       */
      floor?: string | null;
      /**
       * Apartment
       * @description apartment
       * @example 1245
       */
      apartment?: string | null;
      /**
       * Neighborhood
       * @description neighborhood
       */
      neighborhood?: string | null;
      /**
       * Radius
       * @description Radius in meters
       * @example 10000
       */
      radius?: number | null;
      /**
       * @description Location label
       * @default home
       * @example home
       */
      label?: components["schemas"]["LocationLabel"];
      /**
       * Labelother
       * @description Location label
       */
      labelOther?: string | null;
      /**
       * Details
       * @description notes for address
       */
      details?: string | null;
      parking?: components["schemas"]["ParkingType"] | null;
      /** Parkingdescription */
      parkingDescription?: string | null;
      /** Instructions */
      instructions?: string | null;
      /**
       * Isdefault
       * @default false
       */
      isDefault?: boolean | null;
      /**
       * Name
       * @description name
       * @example Name of address
       */
      name?: string | null;
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /**
       * Activesessions
       * @default 0
       */
      activeSessions?: number;
    };
    /** AddressSessionOut */
    AddressSessionOut: {
      /**
       * Lng
       * @example 55.296249
       */
      lng?: number | null;
      /**
       * Lat
       * @example 25.276
       */
      lat?: number | null;
      /**
       * Zoom
       * @default 17
       * @example 14
       */
      zoom?: number | null;
      /** @description accommodation */
      accommodation?: components["schemas"]["Accommodations"] | null;
      /** @description User allergy */
      allergy?: components["schemas"]["UserAllergy"] | null;
      /**
       * Address
       * @description Address
       * @example 548, floor 5, Cluster G, Tower Al mas, JLT, Dubai, UAE
       */
      address?: string | null;
      /**
       * Country
       * @description Country
       * @example United Arab Emirates
       */
      country?: string | null;
      /**
       * State
       * @description state
       * @example Dubai
       */
      state?: string | null;
      /**
       * City
       * @description city
       * @example Dubai
       */
      city?: string | null;
      /**
       * Line1
       * @description line1
       * @example Jumeirah Lake Towers
       */
      line1?: string | null;
      /**
       * Line2
       * @description line2
       * @example 1068, Tower Meadows 2
       */
      line2?: string | null;
      /**
       * Zip
       * @description zip (po box)
       */
      zip?: string | null;
      /**
       * Building
       * @description building
       * @example Tower Meadows 2
       */
      building?: string | null;
      /**
       * Entrance
       * @description entrance
       * @example main
       */
      entrance?: string | null;
      /**
       * Floor
       * @description floor
       * @example 12
       */
      floor?: string | null;
      /**
       * Apartment
       * @description apartment
       * @example 1245
       */
      apartment?: string | null;
      /**
       * Neighborhood
       * @description neighborhood
       */
      neighborhood?: string | null;
      /**
       * Radius
       * @description Radius in meters
       * @example 10000
       */
      radius?: number | null;
      /**
       * @description Location label
       * @default home
       * @example home
       */
      label?: components["schemas"]["LocationLabel"];
      /**
       * Labelother
       * @description Location label
       */
      labelOther?: string | null;
      /**
       * Details
       * @description notes for address
       */
      details?: string | null;
      parking?: components["schemas"]["ParkingType"] | null;
      /** Parkingdescription */
      parkingDescription?: string | null;
      /** Instructions */
      instructions?: string | null;
      /** Id */
      id?: string | null;
    };
    /** AdminAnalyticsSummary */
    AdminAnalyticsSummary: {
      /**
       * Comparefrom
       * @description Comparison from date
       */
      compareFrom?: string | null;
      /**
       * Compareto
       * @description Comparison to date
       */
      compareTo?: string | null;
      revenue: components["schemas"]["TotalRevenueAnalyticsOut"];
      revenueChart: components["schemas"]["AdminRevenueChartOut"];
      sessionInfo: components["schemas"]["SessionInfoAnalyticsOut"];
      coaches: components["schemas"]["UserAnalyticsOut"];
      clients: components["schemas"]["UserAnalyticsOut"];
      /** Bestcoach */
      bestCoach: components["schemas"]["AdminBestUserOut"][];
    };
    /** AdminAppDictionaries */
    AdminAppDictionaries: {
      /**
       * Languages
       * @default {}
       */
      languages?: {
        [key: string]: string;
      } | null;
      /**
       * Alllanguages
       * @default {}
       */
      allLanguages?: {
        [key: string]: string;
      } | null;
      /**
       * Currencies
       * @default {}
       */
      currencies?: {
        [key: string]: string;
      } | null;
      /**
       * Servicetypes
       * @default []
       */
      serviceTypes?: components["schemas"]["ServiceTypeOut"][] | null;
    };
    /** AdminBestUserOut */
    AdminBestUserOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /**
       * Revenue
       * @default 0
       */
      revenue?: number | null;
      /**
       * Sessioncount
       * @default 0
       */
      sessionCount?: number | null;
      /**
       * Refundcount
       * @default 0
       */
      refundCount?: number | null;
      /**
       * Rating
       * @default 0
       */
      rating?: number | null;
      /** Avatarurl */
      avatarUrl?: string | null;
      /** Firstname */
      firstName?: string | null;
      /** Lastname */
      lastName?: string | null;
    };
    /** AdminBookedUsersAnalyticsOut */
    AdminBookedUsersAnalyticsOut: {
      /**
       * Comparefrom
       * @description Comparison from date
       */
      compareFrom?: string | null;
      /**
       * Compareto
       * @description Comparison to date
       */
      compareTo?: string | null;
      /** Total */
      total: number;
      /** Totalpercentage */
      totalPercentage?: number | null;
      /** New */
      new: number;
      /** Newpercentage */
      newPercentage?: number | null;
      /** Previous */
      previous: number;
      /** Previouspercentage */
      previousPercentage?: number | null;
      /**
       * Avatarurls
       * @default []
       */
      avatarUrls?: string[] | null;
      /**
       * Male
       * @default 0
       */
      male?: number;
      /**
       * Female
       * @default 0
       */
      female?: number;
      /**
       * Other
       * @default 0
       */
      other?: number;
      /** Newmale */
      newMale?: number | null;
      /** Newfemale */
      newFemale?: number | null;
      /** Newother */
      newOther?: number | null;
      /**
       * Newavatarurls
       * @default []
       */
      newAvatarUrls?: string[];
      /** Previousmale */
      previousMale?: number | null;
      /** Previousfemale */
      previousFemale?: number | null;
      /** Previousother */
      previousOther?: number | null;
      /**
       * Previousavatarurls
       * @default []
       */
      previousAvatarUrls?: string[];
    };
    /** AdminBusinessAutocompleteOut */
    AdminBusinessAutocompleteOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /** Displayname */
      displayName: string;
    };
    /**
     * AdminBusinessOrderFields
     * @enum {string}
     */
    AdminBusinessOrderFields: "display_name" | "-display_name" | "category_name" | "-category_name" | "country" | "-country" | "created_at" | "-created_at" | "rating" | "-rating" | "email" | "-email" | "phone" | "-phone";
    /** AdminBusinessQueryCountIn */
    AdminBusinessQueryCountIn: {
      /** Search */
      search?: string | null;
      /**
       * Subcategories
       * @default []
       */
      subcategories?: string[];
      /** Category */
      category?: string | null;
      /** Disabled */
      disabled?: boolean | null;
      /** Verified */
      verified?: boolean | null;
      /** Country */
      country?: string | null;
      /** State */
      state?: string | null;
      /**
       * Cities
       * @default []
       */
      cities?: string[];
      /** Registeredfrom */
      registeredFrom?: string | null;
      /** Registeredto */
      registeredTo?: string | null;
      /** Ratingfrom */
      ratingFrom?: number | null;
      /** Ratingto */
      ratingTo?: number | null;
      /** Startswith */
      startsWith?: string | null;
      /** Branchid */
      branchId?: string | null;
    };
    /** AdminBusinessQueryIn */
    AdminBusinessQueryIn: {
      /** Search */
      search?: string | null;
      /**
       * Subcategories
       * @default []
       */
      subcategories?: string[];
      /** Category */
      category?: string | null;
      /** Disabled */
      disabled?: boolean | null;
      /** Verified */
      verified?: boolean | null;
      /** Country */
      country?: string | null;
      /** State */
      state?: string | null;
      /**
       * Cities
       * @default []
       */
      cities?: string[];
      /** Registeredfrom */
      registeredFrom?: string | null;
      /** Registeredto */
      registeredTo?: string | null;
      /** Ratingfrom */
      ratingFrom?: number | null;
      /** Ratingto */
      ratingTo?: number | null;
      /** Startswith */
      startsWith?: string | null;
      /** Branchid */
      branchId?: string | null;
      /**
       * Page
       * @example 0
       */
      page?: number | null;
      /**
       * Limit
       * @example 20
       */
      limit?: number | null;
      sorting?: components["schemas"]["AdminBusinessOrderFields"] | null;
    };
    /** AdminBusinessSummaryViewOut */
    AdminBusinessSummaryViewOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /** Avatarurl */
      avatarUrl?: string | null;
      /** Categoryname */
      categoryName?: string | null;
      /**
       * Subcategories
       * @default []
       */
      subcategories?: string[];
      /** City */
      city?: string | null;
      /** Country */
      country?: string | null;
      /**
       * Createdat
       * Format: date-time
       */
      createdAt: string;
      /**
       * Rating
       * @default 0
       */
      rating?: number;
      /**
       * Reviewscount
       * @default 0
       */
      reviewsCount?: number;
      /** Email */
      email?: string | null;
      /** Phone */
      phone?: string | null;
      /**
       * Disabled
       * @default false
       */
      disabled?: boolean;
      /**
       * Verified
       * @default false
       */
      verified?: boolean;
      /**
       * Boosted
       * @default false
       */
      boosted?: boolean;
      /**
       * Available
       * @default true
       */
      available?: boolean;
      /** Displayname */
      displayName?: string | null;
    };
    /** AdminClientAnalyticsSummary */
    AdminClientAnalyticsSummary: {
      /**
       * Comparefrom
       * @description Comparison from date
       */
      compareFrom?: string | null;
      /**
       * Compareto
       * @description Comparison to date
       */
      compareTo?: string | null;
      revenue: components["schemas"]["TotalRevenueAnalyticsOut"];
      revenueChart: components["schemas"]["AdminRevenueChartOut"];
      sessionInfo: components["schemas"]["SessionInfoAnalyticsOut"];
      reviews: components["schemas"]["SessionReviewInfoOut"];
    };
    /** AdminClientDetailOut */
    AdminClientDetailOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /**
       * Createdat
       * Format: date-time
       */
      createdAt: string;
      /** Avatarurl */
      avatarUrl?: string | null;
      /** Firstname */
      firstName?: string | null;
      /** Lastname */
      lastName?: string | null;
      /** Displayname */
      displayName?: string | null;
      /** Disabled */
      disabled?: boolean | null;
      gender?: components["schemas"]["UserGender"] | null;
      /** Email */
      email?: string | null;
      /** Phone */
      phone?: string | null;
      /**
       * Verified
       * @default false
       */
      verified?: boolean | null;
      /** Properties */
      properties?: components["schemas"]["UserPropOut"][] | null;
      /** Addresses */
      addresses?: components["schemas"]["AddressOut"][] | null;
    };
    /**
     * AdminClientOrderFields
     * @enum {string}
     */
    AdminClientOrderFields: "created_at" | "-created_at" | "last_name" | "-last_name" | "first_name" | "-first_name" | "email" | "-email" | "sessions_count" | "-sessions_count" | "rating" | "-rating" | "spend" | "-spend";
    /** AdminClientSummaryOut */
    AdminClientSummaryOut: {
      /** @default AED */
      currency?: components["schemas"]["CurrencyCode"] | null;
      /**
       * Balance
       * @default 0
       */
      balance?: number | null;
      /** Balancepercentage */
      balancePercentage?: number | null;
      /**
       * Booked
       * @default 0
       */
      booked?: number | null;
      /** Bookedpercentage */
      bookedPercentage?: number | null;
      /**
       * Canceled
       * @default 0
       */
      canceled?: number | null;
      /** Canceledpercentage */
      canceledPercentage?: number | null;
      /**
       * Spend
       * @default 0
       */
      spend?: number | null;
      /** Spendpercentage */
      spendPercentage?: number | null;
      /**
       * Refunded
       * @default 0
       */
      refunded?: number | null;
      /** Refundedpercentage */
      refundedPercentage?: number | null;
    };
    /** AdminClientSummaryViewOut */
    AdminClientSummaryViewOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /** Firstname */
      firstName?: string | null;
      /** Lastname */
      lastName?: string | null;
      /** Phone */
      phone?: string | null;
      /** Email */
      email?: string | null;
      /**
       * Sessionscount
       * @default 0
       */
      sessionsCount?: number | null;
      /**
       * Rating
       * @default 0
       */
      rating?: number | null;
      /**
       * Spend
       * @default 0
       */
      spend?: number | null;
      /** Available */
      available?: boolean | null;
      /** Disabled */
      disabled?: boolean | null;
      /** Verified */
      verified?: boolean | null;
      /** Avatarurl */
      avatarUrl?: string | null;
      /**
       * Createdat
       * Format: date-time
       * @description User registered datetime
       */
      createdAt?: string;
      /** Blockedreason */
      blockedReason?: string | null;
    };
    /** AdminCoachAnalyticsSummary */
    AdminCoachAnalyticsSummary: {
      /**
       * Comparefrom
       * @description Comparison from date
       */
      compareFrom?: string | null;
      /**
       * Compareto
       * @description Comparison to date
       */
      compareTo?: string | null;
      revenue: components["schemas"]["TotalRevenueAnalyticsOut"];
      revenueChart: components["schemas"]["AdminRevenueChartOut"];
      sessionInfo: components["schemas"]["SessionInfoAnalyticsOut"];
      clients: components["schemas"]["AdminBookedUsersAnalyticsOut"];
      /** Views */
      views?: number | null;
      reviews: components["schemas"]["SessionReviewInfoOut"];
    };
    /** AdminCoachClientListCountOut */
    AdminCoachClientListCountOut: {
      /** Total */
      total: number;
      /** Blockedclients */
      blockedClients: number;
    };
    /** AdminCoachDetailViewOut */
    AdminCoachDetailViewOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /** Firstname */
      firstName?: string | null;
      /** Lastname */
      lastName?: string | null;
      /** Avatarurl */
      avatarUrl?: string | null;
      /** Createdat */
      createdAt?: string | null;
      gender?: components["schemas"]["UserGender"] | null;
      /** Birthdate */
      birthDate?: string | null;
      /** Email */
      email?: string | null;
      /** Phone */
      phone?: string | null;
      /** Whatsapp */
      whatsapp?: string | null;
      /**
       * Isdeleted
       * @default false
       */
      isDeleted?: boolean;
      address?: components["schemas"]["AddressOut"] | null;
      /**
       * Available
       * @default false
       */
      available?: boolean | null;
      /** Description */
      description?: string | null;
      /** @default pending */
      state?: components["schemas"]["ReportState"] | null;
      /** Experience */
      experience?: number | null;
      /** Allergy */
      allergy?: string | null;
      /** Allownonverify */
      allowNonVerify?: boolean | null;
      kycStatus?: components["schemas"]["StripeConnectStatus"] | null;
      /** Recoverydeadline */
      recoveryDeadline?: string | null;
      /** Mediaurl */
      mediaUrl?: string | null;
      /** Mediathumb */
      mediaThumb?: string | null;
      /**
       * Boosted
       * @default false
       */
      boosted?: boolean | null;
      /**
       * Disabled
       * @default false
       */
      disabled?: boolean | null;
      /**
       * Verified
       * @default false
       */
      verified?: boolean | null;
      /** Languages */
      languages?: {
        [key: string]: string;
      } | null;
      /**
       * Properties
       * @description Extra property for coach
       */
      properties?: components["schemas"]["UserPropOut"][] | null;
      /**
       * Schedule
       * @default []
       */
      schedule?: components["schemas"]["AvailabilityOut"][];
      /**
       * Certificates
       * @default []
       */
      certificates?: components["schemas"]["CoachCertificateOut"][];
      /**
       * Awards
       * @default []
       */
      awards?: components["schemas"]["AwardOut"][];
      /**
       * Services
       * @default []
       */
      services?: components["schemas"]["ServiceDetailOut"][];
      gallery?: components["schemas"]["AdminCoachGallery"] | null;
      report?: components["schemas"]["AdminResolvedReportOut"] | null;
      /**
       * Faqs
       * @default []
       */
      faqs?: components["schemas"]["FAQDetailOut"][];
    };
    /** AdminCoachGallery */
    AdminCoachGallery: {
      /** Images */
      images?: components["schemas"]["FileOut"][] | null;
      /** Videos */
      videos?: components["schemas"]["VideoFileOut"][] | null;
    };
    /**
     * AdminCoachOrderFields
     * @enum {string}
     */
    AdminCoachOrderFields: "name" | "-name" | "created_at" | "-created_at" | "certificates_count" | "-certificates_count" | "experience" | "-experience" | "services_count" | "-services_count" | "rating" | "-rating" | "disabled" | "-disabled";
    /** AdminCoachSummaryViewOut */
    AdminCoachSummaryViewOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /** Firstname */
      firstName?: string | null;
      /** Lastname */
      lastName?: string | null;
      /** Avatarurl */
      avatarUrl?: string | null;
      /**
       * Createdat
       * Format: date-time
       */
      createdAt: string;
      /** Phone */
      phone?: string | null;
      /** Email */
      email?: string | null;
      /**
       * Servicescount
       * @default 0
       */
      servicesCount?: number;
      /**
       * Certificatescount
       * @default 0
       */
      certificatesCount?: number;
      /** Experience */
      experience?: number | null;
      /**
       * Available
       * @default false
       */
      available?: boolean;
      /**
       * Verified
       * @default false
       */
      verified?: boolean;
      /**
       * Disabled
       * @default false
       */
      disabled?: boolean;
      /**
       * Isdeleted
       * @default false
       */
      isDeleted?: boolean;
      /**
       * Rating
       * @default 0
       */
      rating?: number;
      /**
       * Reviewscount
       * @default 0
       */
      reviewsCount?: number;
      /**
       * Boosted
       * @default false
       */
      boosted?: boolean;
      /**
       * Languages
       * @default {}
       */
      languages?: {
        [key: string]: string;
      };
      /** Recoverydeadline */
      recoveryDeadline?: string | null;
      kycStatus?: components["schemas"]["StripeConnectStatus"] | null;
      /**
       * Isprofilecompleted
       * @default true
       */
      isProfileCompleted?: boolean;
    };
    /** AdminCoachUpdateIn */
    AdminCoachUpdateIn: {
      /** Disabled */
      disabled?: boolean | null;
      /** Verified */
      verified?: boolean | null;
      /** Available */
      available?: boolean | null;
      /** Reason */
      reason?: string | null;
      /** Description */
      description?: string | null;
    };
    /** AdminCoachVerifySummaryCountOut */
    AdminCoachVerifySummaryCountOut: {
      /**
       * Total
       * @default 0
       */
      total?: number | null;
      /**
       * Pending
       * @default 0
       */
      pending?: number | null;
      /**
       * Rejected
       * @default 0
       */
      rejected?: number | null;
      /**
       * Approved
       * @default 0
       */
      approved?: number | null;
    };
    /** AdminCoachVerifySummaryOut */
    AdminCoachVerifySummaryOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /** Firstname */
      firstName?: string | null;
      /** Lastname */
      lastName?: string | null;
      /** Avatarurl */
      avatarUrl?: string | null;
      /** Createdat */
      createdAt?: string | null;
      /** Phone */
      phone?: string | null;
      /** Certificatescount */
      certificatesCount?: number | null;
      /**
       * Experience
       * @default 0
       */
      experience?: number | null;
      /** Servicescount */
      servicesCount?: number | null;
      /** Languages */
      languages?: {
        [key: string]: string;
      } | null;
      /** @default pending */
      state?: components["schemas"]["ReportState"] | null;
    };
    /**
     * AdminConsumerConfigType
     * @enum {string}
     */
    AdminConsumerConfigType: "all" | "consumer";
    /** AdminCreateBusinessAddressIn */
    AdminCreateBusinessAddressIn: {
      /**
       * Lng
       * @example 55.296249
       */
      lng: number;
      /**
       * Lat
       * @example 25.276
       */
      lat: number;
      /**
       * Zoom
       * @default 17
       * @example 14
       */
      zoom?: number | null;
      /** @description accommodation */
      accommodation?: components["schemas"]["Accommodations"] | null;
      /** @description User allergy */
      allergy?: components["schemas"]["UserAllergy"] | null;
      /**
       * Address
       * @description Address
       * @example 548, floor 5, Cluster G, Tower Al mas, JLT, Dubai, UAE
       */
      address?: string | null;
      /**
       * Country
       * @description Country
       * @example United Arab Emirates
       */
      country?: string | null;
      /**
       * State
       * @description state
       * @example Dubai
       */
      state?: string | null;
      /**
       * City
       * @description city
       * @example Dubai
       */
      city?: string | null;
      /**
       * Line1
       * @description line1
       * @example Jumeirah Lake Towers
       */
      line1?: string | null;
      /**
       * Line2
       * @description line2
       * @example 1068, Tower Meadows 2
       */
      line2?: string | null;
      /**
       * Zip
       * @description zip (po box)
       */
      zip?: string | null;
      /**
       * Building
       * @description building
       * @example Tower Meadows 2
       */
      building?: string | null;
      /**
       * Entrance
       * @description entrance
       * @example main
       */
      entrance?: string | null;
      /**
       * Floor
       * @description floor
       * @example 12
       */
      floor?: string | null;
      /**
       * Apartment
       * @description apartment
       * @example 1245
       */
      apartment?: string | null;
      /**
       * Neighborhood
       * @description neighborhood
       */
      neighborhood?: string | null;
      /**
       * Radius
       * @description Radius in meters
       * @example 10000
       */
      radius?: number | null;
      /**
       * @description Location label
       * @default home
       * @example home
       */
      label?: components["schemas"]["LocationLabel"];
      /**
       * Labelother
       * @description Location label
       */
      labelOther?: string | null;
      /**
       * Details
       * @description notes for address
       */
      details?: string | null;
      parking?: components["schemas"]["ParkingType"] | null;
      /** Parkingdescription */
      parkingDescription?: string | null;
      /** Instructions */
      instructions?: string | null;
      /**
       * Isdefault
       * @default false
       */
      isDefault?: boolean | null;
      /**
       * Name
       * @description name
       * @example Name of address
       */
      name?: string | null;
    };
    /** AdminCreateBusinessAvailabilityIn */
    AdminCreateBusinessAvailabilityIn: {
      /** Id */
      id?: string | null;
      /** Title */
      title?: string | null;
      /**
       * Start
       * @description Start date when slot is working
       * @example 2024-12-11
       */
      start?: string | null;
      /**
       * End
       * @description End date when slot is working
       */
      end?: string | null;
      /**
       * Enable
       * @default true
       * @example true
       */
      enable?: boolean | null;
      /**
       * Slotstart
       * Format: time
       * @example 10:00T+04:00
       */
      slotStart?: string;
      /**
       * Slotend
       * Format: time
       * @example 16:30T+04:00
       */
      slotEnd?: string;
      /**
       * @default none
       * @example none
       */
      slotType?: components["schemas"]["AvailabilityType"] | null;
      /**
       * @default available
       * @example available
       */
      slotState?: components["schemas"]["AvailabilityState"] | null;
      /**
       * Isopenallday
       * @default false
       */
      isOpenAllDay?: boolean;
    };
    /** AdminCreateBusinessIn */
    AdminCreateBusinessIn: {
      /** Username */
      username?: string | null;
      /** First Name */
      first_name?: string | null;
      /** Last Name */
      last_name?: string | null;
      gender?: components["schemas"]["UserGender"] | null;
      /** Phone */
      phone?: string | null;
      /** @default business */
      type?: components["schemas"]["UserType"];
      /** Roles */
      roles?: string | string[] | null;
      /** Email */
      email?: string | null;
      /**
       * Available
       * @default false
       */
      available?: boolean;
      /**
       * Timezone
       * @description Default timezone for user
       * @example Asia/Dubai
       */
      timezone?: string | null;
      /** Birthdate */
      birthDate?: string | null;
      /** Languages */
      languages?: string | string[] | null;
      /** Description */
      description?: string | null;
      /** Categoryid */
      categoryId?: string | null;
      /**
       * Verifyemail
       * @default false
       */
      verifyEmail?: boolean;
      /**
       * Verifyphone
       * @default false
       */
      verifyPhone?: boolean;
      /** Displayname */
      displayName?: string | null;
      /** Id */
      id?: string | null;
      /**
       * @default {
       *   "instagram": [],
       *   "facebook": [],
       *   "tiktok": [],
       *   "twitter": [],
       *   "whatsapp": [],
       *   "telegram": [],
       *   "website": [],
       *   "youtube": [],
       *   "snapchat": [],
       *   "wechat": [],
       *   "kakao": [],
       *   "line": [],
       *   "viber": [],
       *   "tumblr": [],
       *   "vkontakte": [],
       *   "linkedin": []
       * }
       */
      contacts?: components["schemas"]["BusinessSocialMediaIn"];
      /** Branchid */
      branchId?: string | null;
      /**
       * Categories
       * @description List of subcategories in string/slug value
       * @default []
       */
      categories?: string[];
      /**
       * Amenities
       * @description List of amenities in string/slug value
       * @default []
       */
      amenities?: string[];
      /**
       * Services
       * @default []
       */
      services?: components["schemas"]["BusinessServiceIn"][];
      /**
       * Faqs
       * @default []
       */
      faqs?: components["schemas"]["FAQCreateIn"][];
      /**
       * Openhours
       * @default []
       */
      openHours?: components["schemas"]["AdminCreateBusinessAvailabilityIn"][];
      address?: components["schemas"]["AdminCreateBusinessAddressIn"];
    };
    /** AdminCreateClientIn */
    AdminCreateClientIn: {
      /** Username */
      username?: string | null;
      /** First Name */
      first_name?: string | null;
      /** Last Name */
      last_name?: string | null;
      gender?: components["schemas"]["UserGender"] | null;
      /** Phone */
      phone?: string | null;
      /** @default client */
      type?: components["schemas"]["UserType"];
      /** Roles */
      roles?: string | string[] | null;
      /** Email */
      email?: string | null;
      /**
       * Available
       * @default false
       */
      available?: boolean;
      /**
       * Timezone
       * @description Default timezone for user
       * @example Asia/Dubai
       */
      timezone?: string | null;
      /** Birthdate */
      birthDate?: string | null;
      /** Languages */
      languages?: string | string[] | null;
      /** Description */
      description?: string | null;
      /** Categoryid */
      categoryId?: string | null;
      /**
       * Verifyemail
       * @default false
       */
      verifyEmail?: boolean;
      /**
       * Verifyphone
       * @default false
       */
      verifyPhone?: boolean;
      /** Displayname */
      displayName?: string | null;
    };
    /** AdminCreateCoachIn */
    AdminCreateCoachIn: {
      /** Username */
      username?: string | null;
      /** First Name */
      first_name?: string | null;
      /** Last Name */
      last_name?: string | null;
      gender?: components["schemas"]["UserGender"] | null;
      /** Phone */
      phone?: string | null;
      /** @default coach */
      type?: components["schemas"]["UserType"];
      /** Roles */
      roles?: string | string[] | null;
      /** Email */
      email?: string | null;
      /**
       * Available
       * @default false
       */
      available?: boolean;
      /**
       * Timezone
       * @description Default timezone for user
       * @example Asia/Dubai
       */
      timezone?: string | null;
      /** Birthdate */
      birthDate?: string | null;
      /** Languages */
      languages?: string | string[] | null;
      /** Description */
      description?: string | null;
      /** Categoryid */
      categoryId?: string | null;
      /**
       * Verifyemail
       * @default false
       */
      verifyEmail?: boolean;
      /**
       * Verifyphone
       * @default false
       */
      verifyPhone?: boolean;
      /** Displayname */
      displayName?: string | null;
      /**
       * Subcategories
       * @default []
       */
      subcategories?: string[];
    };
    /** AdminDashboardAnalytics */
    AdminDashboardAnalytics: {
      /**
       * Comparefrom
       * @description Comparison from date
       */
      compareFrom?: string | null;
      /**
       * Compareto
       * @description Comparison to date
       */
      compareTo?: string | null;
      revenue: components["schemas"]["TotalRevenueAnalyticsOut"];
      coaches: components["schemas"]["UserAnalyticsOut"];
      clients: components["schemas"]["UserAnalyticsOut"];
      sessionInfo: components["schemas"]["SessionInfoAnalyticsOut"];
      reports: components["schemas"]["ReportAnalyticsOut"];
    };
    /**
     * AdminEquipmentOrderFields
     * @enum {string}
     */
    AdminEquipmentOrderFields: "full_name" | "-full_name" | "created_at" | "-created_at" | "services" | "-services" | "description" | "-description";
    /** AdminEquipmentSummaryViewOut */
    AdminEquipmentSummaryViewOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /**
       * Userid
       * Format: uuid
       */
      userId: string;
      /** Title */
      title: string;
      /** Fullname */
      fullName: string;
      /**
       * Createdat
       * Format: date-time
       */
      createdAt: string;
      /** Services */
      services: number;
      /** Description */
      description?: string | null;
      /** Avatarurl */
      avatarUrl?: string | null;
      /**
       * Attachments
       * @default []
       */
      attachments?: components["schemas"]["EquipmentFileOut"][];
    };
    /**
     * AdminEquipmentUserStatus
     * @enum {string}
     */
    AdminEquipmentUserStatus: "all" | "created_by_admin" | "created_by_coach";
    /** AdminInviteIn */
    AdminInviteIn: {
      /** Firstname */
      firstName: string;
      /** Lastname */
      lastName: string;
      type: components["schemas"]["UserType"];
      /**
       * Email
       * Format: email
       * @description Email format
       */
      email: string;
      /**
       * Phone
       * @description Phone number in international format
       */
      phone: string;
      /**
       * Consumerid
       * @description Consumer of web admin app
       */
      consumerId?: string | null;
    };
    /** AdminMarketingGroupOut */
    AdminMarketingGroupOut: {
      /** Title */
      title: string;
      /** Description */
      description?: string | null;
      coachRules?: components["schemas"]["SearchFilterIn"] | null;
      businessRules?: components["schemas"]["BusinessSearchFilterIn"] | null;
      /**
       * Id
       * Format: uuid
       */
      id: string;
      category: components["schemas"]["CategoryOut"];
      attachment?: components["schemas"]["AttachmentFileOut"] | null;
      /**
       * Hidden
       * @default false
       */
      hidden?: boolean;
    };
    /** AdminNotificationStatus */
    AdminNotificationStatus: {
      /**
       * Verification
       * @default 0
       */
      verification?: number;
      /**
       * Reports
       * @default 0
       */
      reports?: number;
      /**
       * Refunds
       * @default 0
       */
      refunds?: number;
    };
    /** AdminPropertyConfigOut */
    AdminPropertyConfigOut: {
      /**
       * Coach
       * @default []
       */
      coach?: components["schemas"]["AdminUserPropertyFieldOut"][] | null;
      /**
       * Service
       * @default []
       */
      service?: components["schemas"]["AdminUserPropertyFieldOut"][] | null;
    };
    /**
     * AdminPropertyFieldAffiliationFilterIn
     * @enum {string}
     */
    AdminPropertyFieldAffiliationFilterIn: "coach" | "client" | "location" | "service";
    /** AdminRefundSummaryCountOut */
    AdminRefundSummaryCountOut: {
      /** Total */
      total: number;
      /**
       * Pending
       * @default 0
       */
      pending?: number | null;
      /**
       * Approved
       * @default 0
       */
      approved?: number | null;
      /**
       * Rejected
       * @default 0
       */
      rejected?: number | null;
      /**
       * Closed
       * @default 0
       */
      closed?: number | null;
      /**
       * Deleted
       * @default 0
       */
      deleted?: number | null;
    };
    /** AdminRefundSummaryOut */
    AdminRefundSummaryOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /**
       * Createdat
       * Format: date-time
       */
      createdAt: string;
      /** Reason */
      reason?: string | null;
      /** Sessionid */
      sessionId?: string | null;
      /** Sessionname */
      sessionName?: string | null;
      /** Sessiondatestart */
      sessionDateStart?: string | null;
      /** Sessiondateend */
      sessionDateEnd?: string | null;
      /** Clientid */
      clientId?: string | null;
      /** Clientfirstname */
      clientFirstName?: string | null;
      /** Clientlastname */
      clientLastName?: string | null;
      /** Clientavatarurl */
      clientAvatarUrl?: string | null;
      /** Coachid */
      coachId?: string | null;
      /** Coachfirstname */
      coachFirstName?: string | null;
      /** Coachlastname */
      coachLastName?: string | null;
      /** Coachavatarurl */
      coachAvatarUrl?: string | null;
      state?: components["schemas"]["ReportState"] | null;
    };
    /** AdminRefundUpdateIn */
    AdminRefundUpdateIn: {
      /** @default rejected */
      state?: components["schemas"]["ReportState"];
      /** Reason */
      reason: string;
      /** Description */
      description?: string | null;
      /** Refundamount */
      refundAmount?: number | null;
      /**
       * Attachmentids
       * @default []
       */
      attachmentIds?: string[];
    };
    /** AdminReportDetailOut */
    AdminReportDetailOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /**
       * Createdat
       * Format: date-time
       */
      createdAt: string;
      /** Reason */
      reason: string;
      /** Description */
      description?: string | null;
      /** Refundamount */
      refundAmount?: number | null;
      /** @default pending */
      state?: components["schemas"]["ReportState"];
      /** @default session */
      type?: components["schemas"]["ReportType"];
      client?: components["schemas"]["AdminSessionUserOut"] | null;
      coach?: components["schemas"]["AdminSessionUserOut"] | null;
      user: components["schemas"]["AdminSessionUserOut"];
      /**
       * Subject
       * @default []
       */
      subject?: components["schemas"]["AdminSessionUserOut"][];
      /**
       * Chathistory
       * @default []
       */
      chatHistory?: components["schemas"]["SBMessageOut"][];
      service?: components["schemas"]["ServiceOut"] | null;
      session?: components["schemas"]["AdminSessionOut"] | null;
      /**
       * Attachments
       * @default []
       */
      attachments?: components["schemas"]["AttachmentFileOut"][];
      resolvedReport?: components["schemas"]["AdminResolvedReportOut"] | null;
      /** @default {} */
      paymentMethod?: components["schemas"]["SessionPaymentMethod"];
    };
    /**
     * AdminReportDirection
     * @enum {string}
     */
    AdminReportDirection: "to_all" | "to_coach" | "to_client";
    /**
     * AdminReportOrderBy
     * @enum {string}
     */
    AdminReportOrderBy: "created_at" | "-created_at";
    /** AdminReportSessionSummary */
    AdminReportSessionSummary: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /** Name */
      name?: string | null;
      /** Datestart */
      dateStart?: string | null;
      /** Dateend */
      dateEnd?: string | null;
    };
    /**
     * AdminReportState
     * @enum {string}
     */
    AdminReportState: "all" | "unread" | "read";
    /** AdminReportSummaryCountOut */
    AdminReportSummaryCountOut: {
      /**
       * Total
       * @default 0
       */
      total?: number | null;
      /**
       * Unread
       * @default 0
       */
      unread?: number | null;
      /**
       * Read
       * @default 0
       */
      read?: number | null;
      /** Reporter */
      reporter?: {
        [key: string]: number;
      } | null;
    };
    /** AdminReportSummaryOut */
    AdminReportSummaryOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /**
       * Createdat
       * Format: date-time
       */
      createdAt: string;
      /** Reason */
      reason?: string | null;
      /** Description */
      description?: string | null;
      /**
       * Viewed
       * @default false
       */
      viewed?: boolean;
      session?: components["schemas"]["AdminReportSessionSummary"] | null;
      reporter: components["schemas"]["AdminSessionUserOut"];
      /**
       * Subject
       * @default []
       */
      subject?: components["schemas"]["AdminSessionUserOut"][];
    };
    /** AdminResolvedReportOut */
    AdminResolvedReportOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /** Reason */
      reason: string;
      /** Description */
      description: string;
      role?: components["schemas"]["UserType"] | null;
      /**
       * Attachments
       * @default []
       */
      attachments?: components["schemas"]["AttachmentFileOut"][];
      /** Refundamount */
      refundAmount?: number | null;
    };
    /** AdminRevenueChartOut */
    AdminRevenueChartOut: {
      /** Labels */
      labels?: ((string | number)[]) | null;
      /** Data */
      data: components["schemas"]["RevenueChartDataOut"][];
    };
    /** AdminRolesOut */
    AdminRolesOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      type: components["schemas"]["UserType"];
      /**
       * Createdat
       * Format: date-time
       */
      createdAt: string;
      /** Isregistered */
      isRegistered: boolean;
      /**
       * Firstname
       * @default Anonymous
       */
      firstName?: string;
      /**
       * Lastname
       * @default User
       */
      lastName?: string;
      /** Email */
      email?: string | null;
      /** Phone */
      phone?: string | null;
      /** Avatarurl */
      avatarUrl?: string | null;
    };
    /** AdminSessionOut */
    AdminSessionOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /** Name */
      name?: string | null;
      /** Datestart */
      dateStart?: string | null;
      /** Dateend */
      dateEnd?: string | null;
      /** State */
      state?: string | null;
      /** Address */
      address?: string | null;
      /** Lat */
      lat?: number | null;
      /** Lng */
      lng?: number | null;
      /** Orderdescription */
      orderDescription?: string | null;
      /** Parkingdescription */
      parkingDescription?: string | null;
    };
    /** AdminSessionReviewUpdateIn */
    AdminSessionReviewUpdateIn: {
      state?: components["schemas"]["SessionReviewState"] | null;
    };
    /** AdminSessionSummaryCountOut */
    AdminSessionSummaryCountOut: {
      /**
       * Total
       * @default 0
       */
      total?: number;
      /**
       * New
       * @default 0
       */
      new?: number;
      /**
       * Pending
       * @default 0
       */
      pending?: number;
      /**
       * Updated By Client
       * @default 0
       */
      updated_by_client?: number;
      /**
       * Updated By Coach
       * @default 0
       */
      updated_by_coach?: number;
      /**
       * Approved
       * @default 0
       */
      approved?: number;
      /**
       * Canceled
       * @default 0
       */
      canceled?: number;
      /**
       * Upcoming
       * @default 0
       */
      upcoming?: number;
      /**
       * Progress
       * @default 0
       */
      progress?: number;
      /**
       * Completed
       * @default 0
       */
      completed?: number;
      /**
       * Refund Request
       * @default 0
       */
      refund_request?: number;
      /**
       * Refund Approved
       * @default 0
       */
      refund_approved?: number;
      /**
       * Refund Rejected
       * @default 0
       */
      refund_rejected?: number;
      /**
       * Deleted
       * @default 0
       */
      deleted?: number;
      /**
       * Paid
       * @default 0
       */
      paid?: number;
    };
    /** AdminSessionSummaryViewOut */
    AdminSessionSummaryViewOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /** Name */
      name?: string | null;
      /** Datestart */
      dateStart?: string | null;
      /** Dateend */
      dateEnd?: string | null;
      /** State */
      state?: string | null;
      /** Address */
      address?: string | null;
      /** Lat */
      lat?: number | null;
      /** Lng */
      lng?: number | null;
      /** Orderdescription */
      orderDescription?: string | null;
      /** Parkingdescription */
      parkingDescription?: string | null;
      /**
       * Coachid
       * Format: uuid
       */
      coachId: string;
      /** Coachfirstname */
      coachFirstName?: string | null;
      /** Coachlastname */
      coachLastName?: string | null;
      /** Coachavatarurl */
      coachAvatarUrl?: string | null;
      /**
       * Clientid
       * Format: uuid
       */
      clientId: string;
      /** Clientfirstname */
      clientFirstName?: string | null;
      /** Clientlastname */
      clientLastName?: string | null;
      /** Clientavatarurl */
      clientAvatarUrl?: string | null;
      /** @default {} */
      paymentMethod?: components["schemas"]["SessionPaymentMethod"];
      /** Cardlast4 */
      cardLast4?: string | null;
      /** Payload */
      payload?: string | null;
    };
    /** AdminSessionUserOut */
    AdminSessionUserOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /** Firstname */
      firstName?: string | null;
      /** Lastname */
      lastName?: string | null;
      /** Avatarurl */
      avatarUrl?: string | null;
      /** Email */
      email?: string | null;
      /** Phone */
      phone?: string | null;
      type?: components["schemas"]["UserType"] | null;
    };
    /** AdminSessionViewOut */
    AdminSessionViewOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /** Name */
      name: string;
      /**
       * Datestart
       * Format: date-time
       */
      dateStart: string;
      /**
       * Dateend
       * Format: date-time
       */
      dateEnd: string;
      /**
       * Expirationdate
       * @example 01/01/2023
       */
      expirationDate?: string | null;
      state: components["schemas"]["SessionState"];
      /** Price */
      price: number;
      /**
       * Currency
       * @default USD
       */
      currency?: string;
      /** Discount */
      discount?: number | null;
      /** Promo */
      promo?: boolean | null;
      /**
       * Cancellationfee
       * @default 0
       * @example 0
       */
      cancellationFee?: number;
      /**
       * Cancellationhours
       * @default 24
       * @example 0
       */
      cancellationHours?: number;
      /**
       * Minutesduration
       * @example 0
       */
      minutesDuration?: number;
      /**
       * Minutestravel
       * @example 0
       */
      minutesTravel?: number;
      /**
       * Dayavailability
       * @example 0
       */
      dayAvailability?: number;
      /** Parking */
      parking?: string | null;
      /** Parkingdescription */
      parkingDescription?: string | null;
      /** Orderdescription */
      orderDescription?: string | null;
      /** Dategap */
      dateGap?: string | null;
      /**
       * Paymentid
       * @example c546cd53-1516-4290-8a1b-780a1e9816c9
       */
      paymentId?: string | null;
      /**
       * Coachid
       * @example c546cd53-1516-4290-8a1b-780a1e9816c9
       */
      coachId?: string | null;
      /**
       * Clientid
       * @example c546cd53-1516-4290-8a1b-780a1e9816c9
       */
      clientId?: string | null;
      /**
       * Serviceid
       * @example c546cd53-1516-4290-8a1b-780a1e9816c9
       */
      serviceId?: string | null;
      /**
       * Addressid
       * @example c546cd53-1516-4290-8a1b-780a1e9816c9
       */
      addressId?: string | null;
      location: components["schemas"]["AddressSessionOut"];
      /**
       * Groupid
       * Format: uuid
       * @example c546cd53-1516-4290-8a1b-780a1e9816c9
       */
      groupId: string;
      /** @example Active */
      paymentState?: components["schemas"]["PaymentState"] | null;
      /**
       * Paymentexpirationat
       * @example 01/01/2023
       */
      paymentExpirationAt?: string | null;
      /**
       * Createdat
       * Format: date-time
       */
      createdAt: string;
      /**
       * Modifiedat
       * Format: date-time
       */
      modifiedAt: string;
      client?: components["schemas"]["ClientDetails"] | null;
      coach?: components["schemas"]["CoachDetails"] | null;
      /**
       * Coachreview
       * @default false
       */
      coachReview?: boolean;
      /**
       * Clientreview
       * @default false
       */
      clientReview?: boolean;
      /** Updatedbyuserid */
      updatedByUserId?: string | null;
      /** Directionid */
      directionId?: string | null;
      payment?: components["schemas"]["PaymentSessionOut"] | null;
      /**
       * Properties
       * @description Extra property for user
       * @example {
       *   "property_name": "property_value"
       * }
       */
      properties?: Record<string, never> | null;
      /**
       * Allowbooking
       * @default true
       */
      allowBooking?: boolean;
      bookingReason?: components["schemas"]["BookingReasonOut"] | null;
      /** Chaturl */
      chatUrl?: string | null;
      /**
       * Blockedyou
       * @default false
       */
      blockedYou?: boolean;
      /**
       * Blockedbyyou
       * @default false
       */
      blockedByYou?: boolean;
      /** Reviews */
      reviews?: components["schemas"]["SessionReviewOut"][] | null;
      /**
       * Cancellationpolicy
       * @default You can cancel a session at no cost if done more than 24 hours before the scheduled time. Cancelling within 24 hours incurs a 50% charge, and cancellations within 1 hour result in the full session cost.
       */
      cancellationPolicy?: string | null;
      /**
       * Prohibitrecording
       * @default true
       */
      prohibitRecording?: boolean;
      /** @default any */
      accommodation?: components["schemas"]["ServiceAccommodation"];
      /**
       * Servicetypes
       * @default []
       */
      serviceTypes?: string[];
      /**
       * Reports
       * @default []
       */
      reports?: components["schemas"]["ReportOut"][];
      cancellationDetails?: components["schemas"]["SessionCancellationDetails"] | null;
    };
    /** AdminTotalCountOut */
    AdminTotalCountOut: {
      /** Total */
      total: number;
    };
    /** AdminTransactionDetailView */
    AdminTransactionDetailView: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      direction: components["schemas"]["TransactionDirection"];
      type: components["schemas"]["TransactionType"];
      status: components["schemas"]["TransactionStatus"];
      /**
       * Createdat
       * Format: date-time
       */
      createdAt: string;
      /**
       * Modifiedat
       * Format: date-time
       */
      modifiedAt: string;
      /** Amount */
      amount: number;
      /** Servicefee */
      serviceFee: number;
      /** Price */
      price: number;
      /** Endingbalance */
      endingBalance: number;
      /**
       * Currency
       * @default AED
       */
      currency?: string;
      /** @default session */
      paymentType?: components["schemas"]["PaymentType"];
      /** @default {} */
      paymentMethod?: components["schemas"]["SessionPaymentMethod"];
      coach: components["schemas"]["AdminSessionUserOut"];
      client: components["schemas"]["AdminSessionUserOut"];
      user: components["schemas"]["AdminSessionUserOut"];
      session?: components["schemas"]["AdminSessionOut"] | null;
      service?: components["schemas"]["ServiceOut"] | null;
      /**
       * Report
       * @default []
       */
      report?: components["schemas"]["AdminResolvedReportOut"][];
    };
    /**
     * AdminTransactionOrderFields
     * @enum {string}
     */
    AdminTransactionOrderFields: "coach_first_name" | "-coach_first_name" | "client_first_name" | "-client_first_name" | "created_at" | "-created_at" | "revenue" | "-revenue" | "status" | "-status";
    /** AdminTransactionSummaryCountOut */
    AdminTransactionSummaryCountOut: {
      /**
       * Total
       * @default 0
       */
      total?: number | null;
      /**
       * Completed
       * @default 0
       */
      completed?: number | null;
      /**
       * Pending
       * @default 0
       */
      pending?: number | null;
      /**
       * Canceled
       * @default 0
       */
      canceled?: number | null;
    };
    /** AdminTransactionSummaryInfoOut */
    AdminTransactionSummaryInfoOut: {
      /**
       * Income
       * @default 0
       */
      income?: number | null;
      /** Incomepercentage */
      incomePercentage?: number | null;
      /**
       * Outcome
       * @default 0
       */
      outcome?: number | null;
      /** Outcomepercentage */
      outcomePercentage?: number | null;
      /**
       * Revenue
       * @default 0
       */
      revenue?: number | null;
      /** Revenuepercentage */
      revenuePercentage?: number | null;
      /** Currency */
      currency?: string | null;
    };
    /** AdminTransactionViewOut */
    AdminTransactionViewOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      direction: components["schemas"]["TransactionDirection"];
      type: components["schemas"]["TransactionType"];
      status: components["schemas"]["TransactionStatus"];
      /**
       * Createdat
       * Format: date-time
       */
      createdAt: string;
      /** Amount */
      amount: number;
      /** Servicefee */
      serviceFee: number;
      /** Price */
      price: number;
      /**
       * Endingbalance
       * @default 0
       */
      endingBalance?: number;
      /**
       * Currency
       * @default AED
       */
      currency?: string;
      /** Sessionname */
      sessionName?: string | null;
      /** @default session */
      paymentType?: components["schemas"]["PaymentType"];
      /** @default {} */
      paymentMethod?: components["schemas"]["SessionPaymentMethod"];
      user: components["schemas"]["AdminSessionUserOut"];
    };
    /** AdminUserConfigOut */
    AdminUserConfigOut: {
      /**
       * @default {
       *   "languages": {},
       *   "allLanguages": {},
       *   "currencies": {},
       *   "serviceTypes": []
       * }
       */
      dictionaries?: components["schemas"]["AdminAppDictionaries"];
      /**
       * @default {
       *   "privacyPolicy": "https://stretch.com/privacy-policy/"
       * }
       */
      links?: components["schemas"]["AppLinks"];
      /**
       * @default {
       *   "verification": 0,
       *   "reports": 0,
       *   "refunds": 0
       * }
       */
      notification?: components["schemas"]["AdminNotificationStatus"];
      profile?: components["schemas"]["UserProfileOut"];
      promo?: components["schemas"]["UserPromoOut"] | null;
      /**
       * @default {
       *   "coach": [],
       *   "service": []
       * }
       */
      properties?: components["schemas"]["AdminPropertyConfigOut"] | null;
      /**
       * Categories
       * @default []
       */
      categories?: components["schemas"]["CategoryOut"][];
      /**
       * Businessfeatures
       * @default []
       */
      businessFeatures?: components["schemas"]["BusinessFeatureOut"][];
      /**
       * Consumerid
       * Format: uuid
       */
      consumerId: string;
    };
    /** AdminUserCountQueryIn */
    AdminUserCountQueryIn: {
      /** Search */
      search?: string | null;
      /** Category */
      category?: string | null;
      /**
       * Subcategories
       * @default []
       */
      subcategories?: string[];
      /** Disabled */
      disabled?: boolean | null;
      /** Verified */
      verified?: boolean | null;
      /** Country */
      country?: string | null;
      /**
       * Cities
       * @default []
       */
      cities?: string[];
      /** Registeredfrom */
      registeredFrom?: string | null;
      /** Registeredto */
      registeredTo?: string | null;
    };
    /** AdminUserDataValidateIn */
    AdminUserDataValidateIn: {
      /**
       * Email
       * @description Email for getting bill information and etc
       */
      email?: string | null;
      /**
       * Phone
       * @description Phone number in international format
       */
      phone?: string | null;
      /**
       * Username
       * @description Username input
       */
      username?: string | null;
      /**
       * Firstname
       * @description First name input
       */
      firstName?: string | null;
      /**
       * Lastname
       * @description Last name input
       */
      lastName?: string | null;
      userType: components["schemas"]["UserType"];
    };
    /** AdminUserListOut */
    AdminUserListOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /** Avatarurl */
      avatarUrl?: string | null;
      /** Categoryname */
      categoryName?: string | null;
      /**
       * Subcategories
       * @default []
       */
      subcategories?: string[];
      /** City */
      city?: string | null;
      /** Country */
      country?: string | null;
      /**
       * Createdat
       * Format: date-time
       */
      createdAt: string;
      /**
       * Rating
       * @default 0
       */
      rating?: number;
      /**
       * Reviewscount
       * @default 0
       */
      reviewsCount?: number;
      /** Email */
      email?: string | null;
      /** Phone */
      phone?: string | null;
      /**
       * Disabled
       * @default false
       */
      disabled?: boolean;
      /**
       * Verified
       * @default false
       */
      verified?: boolean;
      /**
       * Boosted
       * @default false
       */
      boosted?: boolean;
      /**
       * Available
       * @default true
       */
      available?: boolean;
      /** Firstname */
      firstName: string;
      /** Lastname */
      lastName: string;
    };
    /**
     * AdminUserOrderFields
     * @enum {string}
     */
    AdminUserOrderFields: "first_name" | "-first_name" | "category_name" | "-category_name" | "subcategories" | "-subcategories" | "country" | "-country" | "created_at" | "-created_at" | "rating" | "-rating" | "email" | "-email" | "phone" | "-phone" | "disabled" | "-disabled";
    /** AdminUserPropertyFieldIn */
    AdminUserPropertyFieldIn: {
      /** Name */
      name: string;
      type?: components["schemas"]["UserPropertyType"] | null;
      /** Title */
      title?: string | null;
      /** Description */
      description?: string | null;
      /** Default */
      default?: string | null;
      /** Options */
      options?: {
        [key: string]: string;
      } | null;
      /**
       * Affiliation
       * @example client,coach,studio
       */
      affiliation?: string | null;
    };
    /** AdminUserPropertyFieldOut */
    AdminUserPropertyFieldOut: {
      /** Name */
      name?: string;
      type?: components["schemas"]["UserPropertyType"];
      /** Title */
      title?: string | null;
      /** Description */
      description?: string | null;
      /** Default */
      default?: unknown;
      /** Options */
      options?: {
        [key: string]: string;
      } | null;
      /**
       * Id
       * Format: uuid
       */
      id: string;
    };
    /** AdminUserPropertyFieldUpdateIn */
    AdminUserPropertyFieldUpdateIn: {
      /** Name */
      name?: string | null;
      type?: components["schemas"]["UserPropertyType"] | null;
      /** Title */
      title?: string | null;
      /** Description */
      description?: string | null;
      /** Default */
      default?: string | null;
      /** Options */
      options?: {
        [key: string]: string;
      } | null;
      /**
       * Affiliation
       * @example client,coach,studio
       */
      affiliation?: string | null;
    };
    /** AdminUserQueryIn */
    AdminUserQueryIn: {
      /**
       * Page
       * @example 0
       */
      page?: number | null;
      /**
       * Limit
       * @example 20
       */
      limit?: number | null;
      /** Search */
      search?: string | null;
      /** Category */
      category?: string | null;
      /**
       * Subcategories
       * @default []
       */
      subcategories?: string[];
      /** Disabled */
      disabled?: boolean | null;
      /** Verified */
      verified?: boolean | null;
      /** Country */
      country?: string | null;
      /**
       * Cities
       * @default []
       */
      cities?: string[];
      /** Registeredfrom */
      registeredFrom?: string | null;
      /** Registeredto */
      registeredTo?: string | null;
      /** @default -created_at */
      sorting?: components["schemas"]["AdminUserOrderFields"];
    };
    /** AdminUserUpdateIn */
    AdminUserUpdateIn: {
      /**
       * Phone
       * @description Phone number in international format
       * @example +97100000000
       */
      phone?: string | null;
      /**
       * Email
       * @description Email format
       * @example info@stretch.com
       */
      email?: string | null;
      /**
       * Username
       * @description Username input
       */
      username?: string | null;
    };
    /**
     * AdminVerificationOrderIn
     * @enum {string}
     */
    AdminVerificationOrderIn: "first_name" | "-first_name" | "created_at" | "-created_at" | "certificates_count" | "-certificates_count" | "experience" | "-experience" | "services_count" | "-services_count" | "state" | "-state";
    /** AdminWithdrawalDetailOut */
    AdminWithdrawalDetailOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /** Transactiontype */
      transactionType?: string | null;
      /** Amount */
      amount?: number | null;
      /**
       * Currency
       * @default AED
       * @example AED
       */
      currency?: string | null;
      /** @default pending */
      status?: components["schemas"]["WithdrawalState"] | null;
      /** Createdat */
      createdAt?: string | null;
      wallet?: components["schemas"]["WithdrawalWalletDetail"] | null;
      /** Withdrawalfee */
      withdrawalFee?: number | null;
      /** Modifiedat */
      modifiedAt?: string | null;
      user?: components["schemas"]["AdminSessionUserOut"] | null;
      /** History */
      history?: components["schemas"]["AdminWithdrawalSummaryOut"][] | null;
    };
    /**
     * AdminWithdrawalOrderFields
     * @enum {string}
     */
    AdminWithdrawalOrderFields: "user_first_name" | "-user_first_name" | "created_at" | "-created_at" | "amount" | "-amount" | "withdrawal_fee" | "-withdrawal_fee" | "status" | "-status";
    /** AdminWithdrawalSummaryCountOut */
    AdminWithdrawalSummaryCountOut: {
      /**
       * Total
       * @default 0
       */
      total?: number | null;
      /**
       * Pending
       * @default 0
       */
      pending?: number | null;
      /**
       * Completed
       * @default 0
       */
      completed?: number | null;
      /**
       * Rejected
       * @default 0
       */
      rejected?: number | null;
    };
    /** AdminWithdrawalSummaryOut */
    AdminWithdrawalSummaryOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /**
       * Userid
       * Format: uuid
       */
      userId: string;
      /** Userfirstname */
      userFirstName?: string | null;
      /** Userlastname */
      userLastName?: string | null;
      /** Useravatarurl */
      userAvatarUrl?: string | null;
      /**
       * Createdat
       * Format: date-time
       */
      createdAt: string;
      /** Amount */
      amount: number;
      /** Brand */
      brand?: string | null;
      /** Last4 */
      last4?: string | null;
      /** Withdrawalfee */
      withdrawalFee?: number | null;
      /**
       * Currency
       * @default AED
       */
      currency?: string;
      /** @default pending */
      status?: components["schemas"]["WithdrawalState"];
    };
    /** AppAccommodation */
    AppAccommodation: {
      /** @description Accomodation type */
      type?: components["schemas"]["Accommodations"];
      /**
       * Fields
       * @description Accomodation type
       */
      fields?: components["schemas"]["LocationFields"][];
    };
    /** AppAuthentication */
    AppAuthentication: {
      /** Googleurl */
      googleUrl?: string | null;
      /** Appleurl */
      appleUrl?: string | null;
      /** Facebookurl */
      facebookUrl?: string | null;
      /** Telegramurl */
      telegramUrl?: string | null;
    };
    /** AppConfigIn */
    AppConfigIn: {
      app?: components["schemas"]["ApplicationInfo"] | null;
      authentication?: components["schemas"]["AppAuthentication"] | null;
      settings?: components["schemas"]["AppSettingsOut"] | null;
      links?: components["schemas"]["AppLinks"] | null;
      contacts?: components["schemas"]["AppContacts"] | null;
      dictionaries?: components["schemas"]["AppDictionaries-Input"] | null;
      promo?: components["schemas"]["UserPromoOut"] | null;
    };
    /** AppConfigOut */
    AppConfigOut: {
      /**
       * @default {
       *   "name": "Stayfit",
       *   "apiVersion": "undefined",
       *   "theme": "default"
       * }
       */
      app?: components["schemas"]["ApplicationInfo"];
      /** @default {} */
      authentication?: components["schemas"]["AppAuthentication"];
      /**
       * @default {
       *   "otpExpiryInDays": 30,
       *   "recoverExpiryInDays": 30,
       *   "recoveryReminder": true
       * }
       */
      settings?: components["schemas"]["AppSettingsOut"];
      /**
       * @default {
       *   "privacyPolicy": "https://stretch.com/privacy-policy/"
       * }
       */
      links?: components["schemas"]["AppLinks"];
      /** @default {} */
      contacts?: components["schemas"]["AppContacts"];
      /**
       * @default {
       *   "languages": [],
       *   "currencies": [],
       *   "accommodations": [
       *     {
       *       "fields": [
       *         "neighborhood",
       *         "building",
       *         "apartment"
       *       ],
       *       "type": "hotel"
       *     },
       *     {
       *       "fields": [
       *         "neighborhood",
       *         "building"
       *       ],
       *       "type": "house"
       *     },
       *     {
       *       "fields": [
       *         "neighborhood",
       *         "building",
       *         "entrance",
       *         "floor",
       *         "apartment"
       *       ],
       *       "type": "apartment"
       *     },
       *     {
       *       "fields": [
       *         "neighborhood",
       *         "building",
       *         "entrance",
       *         "floor",
       *         "apartment"
       *       ],
       *       "type": "other"
       *     }
       *   ]
       * }
       */
      dictionaries?: components["schemas"]["AppDictionaries-Output"];
      /**
       * Categories
       * @default []
       */
      categories?: components["schemas"]["CategoryOut"][];
      promo?: components["schemas"]["UserPromoOut"] | null;
    };
    /** AppContacts */
    AppContacts: {
      /**
       * Phone
       * @description Support's Phone number
       */
      phone?: string | null;
      /**
       * Whatsapp
       * @description Support's whatsapp
       */
      whatsapp?: string | null;
      /**
       * Email
       * @description Support's Email
       */
      email?: string | null;
      /**
       * Telegram
       * @description Support's Telegram
       */
      telegram?: string | null;
      /**
       * Viber
       * @description Support's Viber
       */
      viber?: string | null;
    };
    /** AppDictionaries */
    "AppDictionaries-Input": {
      /**
       * Languages
       * @default []
       */
      languages?: components["schemas"]["UserLanguages"][] | null;
      /**
       * Currencies
       * @default []
       */
      currencies?: string[] | null;
      /** Cancellationpolicy */
      cancellationPolicy?: string | null;
      /**
       * Accommodations
       * @default [
       *   {
       *     "type": "hotel",
       *     "fields": [
       *       "neighborhood",
       *       "building",
       *       "apartment"
       *     ]
       *   },
       *   {
       *     "type": "house",
       *     "fields": [
       *       "neighborhood",
       *       "building"
       *     ]
       *   },
       *   {
       *     "type": "apartment",
       *     "fields": [
       *       "neighborhood",
       *       "building",
       *       "entrance",
       *       "floor",
       *       "apartment"
       *     ]
       *   },
       *   {
       *     "type": "other",
       *     "fields": [
       *       "neighborhood",
       *       "building",
       *       "entrance",
       *       "floor",
       *       "apartment"
       *     ]
       *   }
       * ]
       */
      accommodations?: components["schemas"]["AppAccommodation"][];
    };
    /** AppDictionaries */
    "AppDictionaries-Output": {
      /**
       * Languages
       * @default []
       */
      languages?: components["schemas"]["UserLanguages"][] | null;
      /**
       * Currencies
       * @default []
       */
      currencies?: string[] | null;
      /** Cancellationpolicy */
      cancellationPolicy?: string | null;
      /**
       * Accommodations
       * @default [
       *   {
       *     "type": "hotel",
       *     "fields": [
       *       "neighborhood",
       *       "building",
       *       "apartment"
       *     ]
       *   },
       *   {
       *     "type": "house",
       *     "fields": [
       *       "neighborhood",
       *       "building"
       *     ]
       *   },
       *   {
       *     "type": "apartment",
       *     "fields": [
       *       "neighborhood",
       *       "building",
       *       "entrance",
       *       "floor",
       *       "apartment"
       *     ]
       *   },
       *   {
       *     "type": "other",
       *     "fields": [
       *       "neighborhood",
       *       "building",
       *       "entrance",
       *       "floor",
       *       "apartment"
       *     ]
       *   }
       * ]
       */
      accommodations?: components["schemas"]["AppAccommodation"][];
    };
    /** AppLinks */
    AppLinks: {
      /**
       * Termsandconditions
       * @description url to terms and conditions
       */
      termsAndConditions?: string | null;
      /**
       * Contactinfo
       * @description url to contact support page
       */
      contactInfo?: string | null;
      /**
       * Cancellationpolicy
       * @description url to contact support page
       */
      cancellationPolicy?: string | null;
      /**
       * Legaldocuments
       * @description url to legal documents
       */
      legalDocuments?: string | null;
      /**
       * Privacypolicy
       * @description url to privacy documents
       * @default https://stretch.com/privacy-policy/
       */
      privacyPolicy?: string | null;
      /**
       * Licensedocuments
       * @description url to license documents
       */
      licenseDocuments?: string | null;
      /**
       * Supportpage
       * @description url to support page
       */
      supportPage?: string | null;
      /**
       * Marketingpage
       * @description url to marketing page
       */
      marketingPage?: string | null;
    };
    /** AppSettingsOut */
    AppSettingsOut: {
      /** Country */
      country?: string | null;
      language?: components["schemas"]["UserLanguages"] | null;
      /** Currency */
      currency?: string | null;
      /**
       * Otpexpiryindays
       * @default 30
       */
      otpExpiryInDays?: number;
      /**
       * Recoverexpiryindays
       * @default 30
       */
      recoverExpiryInDays?: number;
      /**
       * Recoveryreminder
       * @default true
       */
      recoveryReminder?: boolean;
    };
    /** ApplicationInfo */
    ApplicationInfo: {
      /**
       * Name
       * @default Stayfit
       */
      name?: string | null;
      /**
       * Apiversion
       * @default undefined
       */
      apiVersion?: string | null;
      /**
       * Theme
       * @default default
       */
      theme?: string | null;
    };
    /** FileBase */
    AttachmentFileOut: {
      /**
       * Id
       * @description UUID of file
       */
      id?: string | null;
      /**
       * Title
       * @description The title name of the uploaded file
       */
      title?: string | null;
      /**
       * Description
       * @description The description for uploaded file
       */
      description?: string | null;
      /**
       * Source
       * @default local
       */
      source?: string;
      /**
       * Originfilename
       * @description The original file name given when uploading the file
       */
      originFilename?: string | null;
      /** Filesize */
      filesize?: number | null;
      /**
       * Contenttype
       * @description File contents in MIME format
       */
      contentType?: string | null;
      /**
       * Url
       * @description Direct link to the downloaded file. The file can be recompressed when it is placed in the storage
       */
      url?: string | null;
      /**
       * Thumb
       * @description Link to the preview file
       */
      thumb?: string | null;
      /** @description File visibility status in the system: on review, approved or rejected */
      status?: components["schemas"]["FileStatus"] | null;
      /**
       * Duration
       * @description Duration in seconds
       */
      duration?: number | null;
      /**
       * Videothumb
       * @description Link to the preview file
       */
      videoThumb?: string | null;
    };
    /**
     * AvailabilityDateFormat
     * @enum {string}
     */
    AvailabilityDateFormat: "utc" | "auto";
    /** Availability */
    AvailabilityOut: {
      /** Id */
      id: string | null;
      /** Title */
      title?: string | null;
      /** Start */
      start?: string | null;
      /** End */
      end?: string | null;
      /**
       * Enable
       * @default true
       */
      enable?: boolean;
      /**
       * Slotstart
       * @example 10:00T+04:00
       */
      slotStart?: string | null;
      /**
       * Slotend
       * @example 10:00T+04:00
       */
      slotEnd?: string | null;
      /** @default none */
      slotType?: components["schemas"]["AvailabilityType"] | null;
      /** @default available */
      slotState?: components["schemas"]["AvailabilityState"];
      /** Client */
      client?: string | null;
      /**
       * Slotgap
       * @example 12:00T+04:00
       */
      slotGap?: string | null;
    };
    /**
     * AvailabilityState
     * @enum {string}
     */
    AvailabilityState: "available" | "busy" | "session" | "closed";
    /**
     * AvailabilityType
     * @enum {string}
     */
    AvailabilityType: "daily" | "workday" | "weekend" | "monday" | "tuesday" | "wednesday" | "thursday" | "friday" | "saturday" | "sunday" | "once" | "ignore" | "session" | "none";
    /** AwardFileOut */
    AwardFileOut: {
      /**
       * Contenttype
       * @description Content type of media file
       */
      contentType?: string | null;
      /**
       * Url
       * @description Full size url
       */
      url?: string | null;
      /**
       * Thumb
       * @description Thumbnail url
       */
      thumb?: string | null;
      /**
       * Videothumb
       * @description Video thumbnail url
       */
      videoThumb?: string | null;
      /** @description File visibility status in the system: on review, approved or rejected */
      status?: components["schemas"]["FileStatus"] | null;
      /**
       * Duration
       * @description Duration of media
       */
      duration?: number | null;
      /**
       * Originfilename
       * @description Original media filename
       */
      originFilename?: string | null;
      /**
       * Filesize
       * @description Filesize of media
       */
      filesize?: number | null;
      /**
       * Id
       * Format: uuid
       */
      id: string;
    };
    /** AwardOut */
    AwardOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /** Title */
      title: string;
      /** Description */
      description?: string | null;
      /**
       * Attachments
       * @default []
       */
      attachments?: components["schemas"]["AwardFileOut"][] | null;
    };
    /** BalanceOut */
    BalanceOut: {
      /** Amount */
      amount?: number | null;
      /** Currency */
      currency?: string | null;
    };
    /** Body_create_feedback_api_v1_admin_support_feedback_post */
    Body_create_feedback_api_v1_admin_support_feedback_post: {
      /**
       * Reason
       * @description Reason feedback
       */
      reason: string;
      /**
       * Phone
       * @description Feedback phone
       */
      phone: string;
      /**
       * Full Name
       * @description Fullname
       */
      full_name?: string | null;
      /**
       * Message
       * @description Feedback message
       */
      message?: string | null;
      /**
       * File
       * @description Downloadable file
       */
      file?: File | null;
    };
    /** Body_import_business_api_v1_admin_business_import_post */
    Body_import_business_api_v1_admin_business_import_post: {
      /**
       * File
       * Format: binary
       */
      file: File;
    };
    /** Body_import_business_external_api_v1_admin_business_import_external_post */
    Body_import_business_external_api_v1_admin_business_import_external_post: {
      /**
       * File
       * Format: binary
       */
      file: File;
    };
    /** Body_import_categories_api_v1_admin_category_import_post */
    Body_import_categories_api_v1_admin_category_import_post: {
      /**
       * File
       * Format: binary
       */
      file: File;
    };
    /** Body_import_categories_api_v1_admin_geo_post */
    Body_import_categories_api_v1_admin_geo_post: {
      /**
       * File
       * Format: binary
       */
      file: File;
    };
    /** Body_import_users_api_v1_admin_user_import_post */
    Body_import_users_api_v1_admin_user_import_post: {
      /**
       * File
       * Format: binary
       */
      file: File;
    };
    /** BookingReasonOut */
    BookingReasonOut: {
      type?: components["schemas"]["BookingReasonType"] | null;
      /** Message */
      message?: string | null;
    };
    /**
     * BookingReasonType
     * @enum {string}
     */
    BookingReasonType: "client_unverified" | "client_too_far" | "client_blocked" | "coach_blocked" | "coach_unavailable" | "coach_allergic" | "coach_banned";
    /** BusinessAvailabilityOut */
    BusinessAvailabilityOut: {
      /** Title */
      title?: string | null;
      /**
       * Slotstart
       * @description time of open
       * @example 05:00
       */
      slotStart?: string | null;
      /**
       * Slotend
       * @description time of close
       * @example 12:00
       */
      slotEnd?: string | null;
      /**
       * Slotstart2
       * @description time of open second range
       * @example 15:00
       */
      slotStart2?: string | null;
      /**
       * Slotend2
       * @description time of close second range
       * @example 22:00
       */
      slotEnd2?: string | null;
      /**
       * Isclosed
       * @description is location open all hours
       * @default false
       */
      isClosed?: boolean;
      /** @example monday */
      slotType?: components["schemas"]["OpenHourType"] | null;
      /**
       * @default available
       * @example available
       */
      slotState?: components["schemas"]["AvailabilityState"] | null;
      /**
       * Timerangeverbose
       * @example Time range as it is read in from web scraper
       */
      timerangeVerbose?: string | null;
      /**
       * Timezone
       * @default Asia/Dubai
       */
      timezone?: string;
    };
    /** BusinessContactIn */
    BusinessContactIn: {
      /** @default website */
      type?: components["schemas"]["BusinessContactType"];
      /** Value */
      value: string;
      /**
       * Values
       * @default []
       */
      values?: string[];
      /**
       * Verified
       * @default false
       */
      verified?: boolean;
    };
    /**
     * BusinessContactType
     * @enum {string}
     */
    BusinessContactType: "instagram" | "facebook" | "tiktok" | "twitter" | "x(twitter)" | "whatsapp" | "telegram" | "website" | "youtube" | "snapchat" | "wechat" | "kakao" | "line" | "viber" | "tumblr" | "vkontakte" | "linkedin";
    /** BusinessFeatureOut */
    BusinessFeatureOut: {
      /** Name */
      name: string;
      /** Slug */
      slug: string;
      /** Description */
      description?: string | null;
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /**
       * Isavailable
       * @default false
       */
      isAvailable?: boolean;
    };
    /** BusinessFilterValueOut */
    BusinessFilterValueOut: {
      /** Name */
      name: string;
      /** Count */
      count: number;
    };
    /** BusinessFiltersOut */
    BusinessFiltersOut: {
      /**
       * Categories
       * @default []
       */
      categories?: components["schemas"]["CategoryFilterItem"][];
      /**
       * Countries
       * @default []
       */
      countries?: components["schemas"]["CountryFilterItem"][];
      /**
       * Status
       * @default []
       */
      status?: components["schemas"]["BusinessFilterValueOut"][];
    };
    /**
     * BusinessOrderByFields
     * @enum {string}
     */
    BusinessOrderByFields: "created_at" | "distance" | "rating";
    /** BusinessSearchFilterIn */
    BusinessSearchFilterIn: {
      /**
       * Page
       * @example 0
       */
      page?: number | null;
      /**
       * Limit
       * @example 20
       */
      limit?: number | null;
      /** Search */
      search?: string | null;
      /** Marketingid */
      marketingId?: string | null;
      /** Addressid */
      addressId?: string | null;
      /** Lng */
      lng?: number | null;
      /** Lat */
      lat?: number | null;
      /** Radius */
      radius?: number | null;
      /** Branchid */
      branchId?: string | null;
      /** Categoryid */
      categoryId?: string | null;
      /** Subcategoryid */
      subcategoryId?: string | null;
      /** @default all */
      workingHours?: components["schemas"]["BusinessWorkingHourFields"];
      /**
       * Branchescount
       * @description Filter by branches count equal to or greater than
       */
      branchesCount?: number | null;
      /**
       * Amenities
       * @description List of amenities by name
       * @default []
       */
      amenities?: string[];
      /** @default distance */
      order?: components["schemas"]["BusinessOrderByFields"];
      /** @default asc */
      direction?: components["schemas"]["SearchOrderDirection"];
    };
    /** BusinessServiceIn */
    BusinessServiceIn: {
      /** Name */
      name: string;
      /** Pricedetails */
      priceDetails: string;
    };
    /** BusinessSocialMediaIn */
    BusinessSocialMediaIn: {
      /**
       * Instagram
       * @default []
       */
      instagram?: string[];
      /**
       * Facebook
       * @default []
       */
      facebook?: string[];
      /**
       * Tiktok
       * @default []
       */
      tiktok?: string[];
      /**
       * Twitter
       * @default []
       */
      twitter?: string[];
      /**
       * Whatsapp
       * @default []
       */
      whatsapp?: string[];
      /**
       * Telegram
       * @default []
       */
      telegram?: string[];
      /**
       * Website
       * @default []
       */
      website?: string[];
      /**
       * Youtube
       * @default []
       */
      youtube?: string[];
      /**
       * Snapchat
       * @default []
       */
      snapchat?: string[];
      /**
       * Wechat
       * @default []
       */
      wechat?: string[];
      /**
       * Kakao
       * @default []
       */
      kakao?: string[];
      /**
       * Line
       * @default []
       */
      line?: string[];
      /**
       * Viber
       * @default []
       */
      viber?: string[];
      /**
       * Tumblr
       * @default []
       */
      tumblr?: string[];
      /**
       * Vkontakte
       * @default []
       */
      vkontakte?: string[];
      /**
       * Linkedin
       * @default []
       */
      linkedin?: string[];
    };
    /**
     * BusinessWorkingHourFields
     * @enum {string}
     */
    BusinessWorkingHourFields: "all" | "open_now" | "open_24_7";
    /**
     * CardPaymentBrandType
     * @enum {string}
     */
    CardPaymentBrandType: "amex" | "diners" | "discover" | "eftpos_au" | "jcb" | "mastercard" | "unionpay" | "visa" | "bank_account" | "unknown";
    /** CategoryFilterItem */
    CategoryFilterItem: {
      /** Name */
      name: string;
      /** Count */
      count: number;
      /** Subcategories */
      subcategories: components["schemas"]["BusinessFilterValueOut"][];
    };
    /** CategoryIn */
    CategoryIn: {
      /** Name */
      name?: string;
      /** Description */
      description?: string | null;
      /** Slug */
      slug?: string | null;
      /** @default business */
      type?: components["schemas"]["CategoryType"] | null;
      /** Parentid */
      parentId?: string | null;
      /** Attachmentid */
      attachmentId?: string | null;
    };
    /** CategoryOut */
    CategoryOut: {
      /** Name */
      name?: string;
      /** Description */
      description?: string | null;
      /** Slug */
      slug?: string | null;
      /** @default business */
      type?: components["schemas"]["CategoryType"] | null;
      /** Parentid */
      parentId?: string | null;
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /** Imageurl */
      imageUrl?: string | null;
      /** Count */
      count?: number | null;
      /**
       * Subcategories
       * @default []
       */
      subcategories?: components["schemas"]["CategoryOut"][];
      /**
       * Attachments
       * @default []
       */
      attachments?: components["schemas"]["AttachmentFileOut"][];
    };
    /**
     * CategoryType
     * @enum {string}
     */
    CategoryType: "stretch" | "coach" | "business" | "nutrition" | "calculator";
    /** CategoryUpdateIn */
    CategoryUpdateIn: {
      /** Name */
      name?: string | null;
      /** Description */
      description?: string | null;
      /** Slug */
      slug?: string | null;
      /** @default business */
      type?: components["schemas"]["CategoryType"] | null;
      /** Parentid */
      parentId?: string | null;
      /** Attachmentid */
      attachmentId?: string | null;
    };
    /** ClientDetails */
    ClientDetails: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /**
       * Displayname
       * @description User display name
       * @example Smith
       */
      displayName?: string | null;
      /** Firstname */
      firstName: string;
      /** Lastname */
      lastName: string;
      /** Avatarurl */
      avatarUrl?: string | null;
      type: components["schemas"]["UserType"];
      /**
       * Isdeleted
       * @default false
       */
      isDeleted?: boolean;
      /** @description User allergy */
      allergy?: components["schemas"]["UserAllergy"] | null;
      /** Rating */
      rating?: number | null;
      /**
       * Reviewscount
       * @description Number of reviews
       * @default 0
       */
      reviewsCount?: number | null;
      /** Sessionscount */
      sessionsCount?: number | null;
      /**
       * Registrationdate
       * @description User registration date
       */
      registrationDate?: string | null;
      /** Verified */
      verified?: boolean | null;
      /**
       * Experience
       * @description User experience
       */
      experience?: number | null;
      /** Allownonverify */
      allowNonVerify?: boolean | null;
      /**
       * @description User gender
       * @example male
       */
      gender?: components["schemas"]["UserGender"] | null;
      /**
       * Avatartype
       * @description Avatar type of banner picture
       */
      avatarType?: string | null;
      /** Avatarimageurl */
      avatarImageUrl?: string | null;
      /** Mediatype */
      mediaType?: string | null;
      /** Mediaurl */
      mediaUrl?: string | null;
      /** Mediapreviewurl */
      mediaPreviewUrl?: string | null;
      /**
       * Description
       * @description About
       */
      description?: string | null;
      /**
       * Languages
       * @description Languages
       */
      languages: string | {
        [key: string]: string;
      } | null;
      /**
       * Properties
       * @description Extra property for user
       */
      properties?: components["schemas"]["UserPropOut"][] | null;
      /**
       * Phone
       * @description Phone number in international format
       * @example +97100000000
       */
      phone?: string | null;
      /**
       * Whatsapp
       * @description Whatsapp  number in international format
       * @example +97100000000
       */
      whatsapp?: string | null;
      /** @description KYC verification */
      kycStatus?: components["schemas"]["StripeConnectStatus"] | null;
      /** Chaturl */
      chatUrl?: string | null;
      /**
       * Disabled
       * @default false
       */
      disabled?: boolean;
      /** Recoverydeadline */
      recoveryDeadline?: string | null;
      /**
       * Blockedyou
       * @default false
       */
      blockedYou?: boolean;
      /**
       * Blockedbyyou
       * @default false
       */
      blockedByYou?: boolean;
      /**
       * Reportedbyyou
       * @default false
       */
      reportedByYou?: boolean;
      /**
       * Username
       * @description Username input
       */
      username?: string | null;
      /**
       * Email
       * @description Email format
       * @example info@stretch.com
       */
      email?: string | null;
      /**
       * Timezone
       * @description Default timezone for user
       * @example Asia/Dubai
       */
      timezone?: string | null;
      /**
       * Birthdate
       * @description User Birth date
       * @example 2000-07-08
       */
      birthDate?: string | null;
      /**
       * Fullname
       * @description Default timezone for user
       * @example Asia/Dubai
       */
      fullName?: string | null;
    };
    /** CoachCertificateFileOut */
    CoachCertificateFileOut: {
      /**
       * Contenttype
       * @description Content type of media file
       */
      contentType?: string | null;
      /**
       * Url
       * @description Full size url
       */
      url?: string | null;
      /**
       * Thumb
       * @description Thumbnail url
       */
      thumb?: string | null;
      /**
       * Videothumb
       * @description Video thumbnail url
       */
      videoThumb?: string | null;
      /** @description File visibility status in the system: on review, approved or rejected */
      status?: components["schemas"]["FileStatus"] | null;
      /**
       * Duration
       * @description Duration of media
       */
      duration?: number | null;
      /**
       * Originfilename
       * @description Original media filename
       */
      originFilename?: string | null;
      /**
       * Filesize
       * @description Filesize of media
       */
      filesize?: number | null;
      /**
       * Id
       * Format: uuid
       */
      id: string;
    };
    /** CoachCertificateOut */
    CoachCertificateOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /** Title */
      title: string;
      /** Description */
      description?: string | null;
      /**
       * Issuedate
       * Format: date-time
       */
      issueDate?: string;
      /** Expiredate */
      expireDate?: string | null;
      /**
       * Attachments
       * @default []
       */
      attachments?: components["schemas"]["CoachCertificateFileOut"][] | null;
    };
    /** CoachDetails */
    CoachDetails: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /**
       * Displayname
       * @description User display name
       * @example Smith
       */
      displayName?: string | null;
      /** Firstname */
      firstName: string;
      /** Lastname */
      lastName: string;
      /** Avatarurl */
      avatarUrl?: string | null;
      type: components["schemas"]["UserType"];
      /**
       * Isdeleted
       * @default false
       */
      isDeleted?: boolean;
      /** @description User allergy */
      allergy?: components["schemas"]["UserAllergy"] | null;
      /** Rating */
      rating?: number | null;
      /**
       * Reviewscount
       * @description Number of reviews
       * @default 0
       */
      reviewsCount?: number | null;
      /** Sessionscount */
      sessionsCount?: number | null;
      /**
       * Registrationdate
       * @description User registration date
       */
      registrationDate?: string | null;
      /** Verified */
      verified?: boolean | null;
      /**
       * Experience
       * @description User experience
       */
      experience?: number | null;
      /** Allownonverify */
      allowNonVerify?: boolean | null;
      /**
       * @description User gender
       * @example male
       */
      gender?: components["schemas"]["UserGender"] | null;
      /**
       * Avatartype
       * @description Avatar type of banner picture
       */
      avatarType?: string | null;
      /** Avatarimageurl */
      avatarImageUrl?: string | null;
      /** Mediatype */
      mediaType?: string | null;
      /** Mediaurl */
      mediaUrl?: string | null;
      /** Mediapreviewurl */
      mediaPreviewUrl?: string | null;
      /**
       * Description
       * @description About
       */
      description?: string | null;
      /**
       * Languages
       * @description Languages
       */
      languages: string | {
        [key: string]: string;
      } | null;
      /**
       * Properties
       * @description Extra property for user
       */
      properties?: components["schemas"]["UserPropOut"][] | null;
      /**
       * Phone
       * @description Phone number in international format
       * @example +97100000000
       */
      phone?: string | null;
      /**
       * Whatsapp
       * @description Whatsapp  number in international format
       * @example +97100000000
       */
      whatsapp?: string | null;
      /** @description KYC verification */
      kycStatus?: components["schemas"]["StripeConnectStatus"] | null;
      /** Chaturl */
      chatUrl?: string | null;
      /**
       * Disabled
       * @default false
       */
      disabled?: boolean;
      /** Recoverydeadline */
      recoveryDeadline?: string | null;
      /**
       * Blockedyou
       * @default false
       */
      blockedYou?: boolean;
      /**
       * Blockedbyyou
       * @default false
       */
      blockedByYou?: boolean;
      /**
       * Reportedbyyou
       * @default false
       */
      reportedByYou?: boolean;
      /**
       * Username
       * @description Username input
       */
      username?: string | null;
      /**
       * Email
       * @description Email format
       * @example info@stretch.com
       */
      email?: string | null;
      /**
       * Timezone
       * @description Default timezone for user
       * @example Asia/Dubai
       */
      timezone?: string | null;
      /**
       * Birthdate
       * @description User Birth date
       * @example 2000-07-08
       */
      birthDate?: string | null;
      /**
       * Fullname
       * @description Default timezone for user
       * @example Asia/Dubai
       */
      fullName?: string | null;
      /**
       * Boosted
       * @default false
       */
      boosted?: boolean;
    };
    /** ConsumerIn */
    ConsumerIn: {
      /**
       * Name
       * @default Stayfit Consumer
       */
      name?: string;
      /** Description */
      description?: string | null;
      /**
       * Expiresaccess
       * @default 180000
       */
      expiresAccess?: number;
      /**
       * Expiresrefresh
       * @default 18000000
       */
      expiresRefresh?: number;
      /** Roles */
      roles?: string | string[] | null;
      /** Scopes */
      scopes?: string | string[] | null;
      settings?: components["schemas"]["AppConfigIn"] | null;
      /**
       * Tokentype
       * @default Bearer
       */
      tokenType?: string;
    };
    /** ConsumerOut */
    ConsumerOut: {
      /**
       * Name
       * @default Stayfit Consumer
       */
      name?: string;
      /** Description */
      description?: string | null;
      /**
       * Expiresaccess
       * @default 180000
       */
      expiresAccess?: number;
      /**
       * Expiresrefresh
       * @default 18000000
       */
      expiresRefresh?: number;
      /** Roles */
      roles?: string | string[] | null;
      /** Scopes */
      scopes?: string | string[] | null;
      settings?: components["schemas"]["AppConfigOut"] | null;
      /**
       * Tokentype
       * @default Bearer
       */
      tokenType?: string;
      /**
       * Clientid
       * Format: uuid
       */
      clientId?: string;
      /** Clientsecret */
      clientSecret?: string | null;
      /** Baseid */
      baseId?: string | null;
    };
    /** ConsumerUpdateIn */
    ConsumerUpdateIn: {
      /** Name */
      name?: string | null;
      /** Description */
      description?: string | null;
      /** Expiresaccess */
      expiresAccess?: number | null;
      /** Expiresrefresh */
      expiresRefresh?: number | null;
      /** Roles */
      roles?: string | string[] | null;
      /** Scopes */
      scopes?: string | string[] | null;
      settings?: components["schemas"]["AppConfigIn"] | null;
      /** Tokentype */
      tokenType?: string | null;
    };
    /** CountryFilterItem */
    CountryFilterItem: {
      /** Name */
      name: string;
      /** Count */
      count: number;
      /** Cities */
      cities: components["schemas"]["BusinessFilterValueOut"][];
    };
    /**
     * CurrencyCode
     * @enum {string}
     */
    CurrencyCode: "AED" | "AFN" | "ALL" | "AMD" | "ANG" | "AOA" | "ARS" | "AUD" | "AWG" | "AZN" | "BAM" | "BBD" | "BDT" | "BGN" | "BHD" | "BIF" | "BMD" | "BND" | "BOB" | "BRL" | "BSD" | "BTC" | "BTN" | "BTS" | "BWP" | "BYN" | "BZD" | "CAD" | "CDF" | "CHF" | "CLF" | "CLP" | "CNH" | "CNY" | "COP" | "CRC" | "CUC" | "CUP" | "CVE" | "CZK" | "DASH" | "DJF" | "DKK" | "DOGE" | "DOP" | "DZD" | "EGP" | "ERN" | "ETB" | "ETH" | "EUR" | "FJD" | "FKP" | "GBP" | "GEL" | "GGP" | "GHS" | "GIP" | "GMD" | "GNF" | "GTQ" | "GYD" | "HKD" | "HNL" | "HRK" | "HTG" | "HUF" | "IDR" | "ILS" | "IMP" | "INR" | "IQD" | "IRR" | "ISK" | "JEP" | "JMD" | "JOD" | "JPY" | "KES" | "KGS" | "KHR" | "KMF" | "KPW" | "KRW" | "KWD" | "KYD" | "KZT" | "LAK" | "LBP" | "LD" | "LKR" | "LRD" | "LSL" | "LTC" | "LYD" | "MAD" | "MDL" | "MGA" | "MKD" | "MMK" | "MNT" | "MOP" | "MRU" | "MUR" | "MVR" | "MWK" | "MXN" | "MYR" | "MZN" | "NAD" | "NGN" | "NIO" | "NOK" | "NPR" | "NXT" | "NZD" | "OMR" | "PAB" | "PEN" | "PGK" | "PHP" | "PKR" | "PLN" | "PYG" | "QAR" | "RON" | "RSD" | "RUB" | "RWF" | "SAR" | "SBD" | "SCR" | "SDG" | "SEK" | "SGD" | "SHP" | "SLL" | "SOS" | "SRD" | "SSP" | "STD" | "STN" | "STR" | "SVC" | "SYP" | "SZL" | "THB" | "TJS" | "TMT" | "TND" | "TOP" | "TRY" | "TTD" | "TWD" | "TZS" | "UAH" | "UGX" | "USD" | "UYU" | "UZS" | "VEF_BLKMKT" | "VEF_DICOM" | "VEF_DIPRO" | "VES" | "VND" | "VUV" | "WST" | "XAF" | "XAG" | "XAU" | "XCD" | "XDR" | "XMR" | "XOF" | "XPD" | "XPF" | "XPT" | "XRP" | "YER" | "ZAR" | "ZMW" | "ZWL";
    /**
     * DataFrameFileType
     * @enum {string}
     */
    DataFrameFileType: "excel" | "csv" | "xml";
    /** DeleteResponse */
    DeleteResponse: {
      /**
       * Status
       * @description Stretch status response
       * @default success
       */
      status?: string;
      /**
       * Deleted
       * @default 0
       */
      deleted?: number;
    };
    /** EquipmentFileOut */
    EquipmentFileOut: {
      /**
       * Contenttype
       * @description Content type of media file
       */
      contentType?: string | null;
      /**
       * Url
       * @description Full size url
       */
      url?: string | null;
      /**
       * Thumb
       * @description Thumbnail url
       */
      thumb?: string | null;
      /**
       * Videothumb
       * @description Video thumbnail url
       */
      videoThumb?: string | null;
      /** @description File visibility status in the system: on review, approved or rejected */
      status?: components["schemas"]["FileStatus"] | null;
      /**
       * Duration
       * @description Duration of media
       */
      duration?: number | null;
      /**
       * Originfilename
       * @description Original media filename
       */
      originFilename?: string | null;
      /**
       * Filesize
       * @description Filesize of media
       */
      filesize?: number | null;
      /**
       * Id
       * Format: uuid
       */
      id: string;
    };
    /** EquipmentOut */
    EquipmentOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /** Title */
      title: string;
      /** Description */
      description?: string | null;
      /**
       * Public
       * @default true
       */
      public?: boolean;
      /**
       * Servicescount
       * @default 0
       */
      servicesCount?: number;
      /**
       * Attachments
       * @default []
       */
      attachments?: components["schemas"]["EquipmentFileOut"][] | null;
    };
    /** FAQCreateIn */
    FAQCreateIn: {
      /** Question */
      question: string;
      /** Answer */
      answer: string;
    };
    /** FAQDetailOut */
    FAQDetailOut: {
      /** Question */
      question: string;
      /** Answer */
      answer: string;
      /**
       * Id
       * Format: uuid
       */
      id: string;
    };
    /**
     * FileBase
     * @description For each file generated preview
     */
    FileOut: {
      /**
       * Id
       * @description UUID of file
       */
      id?: string | null;
      /**
       * Title
       * @description The title name of the uploaded file
       */
      title?: string | null;
      /**
       * Description
       * @description The description for uploaded file
       */
      description?: string | null;
      /**
       * Source
       * @default local
       */
      source?: string;
      /**
       * Originfilename
       * @description The original file name given when uploading the file
       */
      originFilename?: string | null;
      /** Filesize */
      filesize?: number | null;
      /**
       * Contenttype
       * @description File contents in MIME format
       */
      contentType?: string | null;
      /**
       * Url
       * @description Direct link to the downloaded file. The file can be recompressed when it is placed in the storage
       */
      url?: string | null;
      /**
       * Thumb
       * @description Link to the preview file
       */
      thumb?: string | null;
      /** @description File visibility status in the system: on review, approved or rejected */
      status?: components["schemas"]["FileStatus"] | null;
    };
    /**
     * FileStatus
     * @enum {string}
     */
    FileStatus: "uploaded" | "processing" | "approved" | "rejected" | "review" | "draft" | "deleted";
    /**
     * GeoImportFileType
     * @enum {string}
     */
    GeoImportFileType: "region" | "subregion" | "country" | "state" | "city";
    /** HTTPValidationError */
    HTTPValidationError: {
      /** Detail */
      detail?: components["schemas"]["ValidationError"][];
    };
    /** LanguagesConfigOut */
    LanguagesConfigOut: {
      /** Languages */
      languages?: {
        [key: string]: string;
      } | null;
    };
    /**
     * LocationFields
     * @enum {string}
     */
    LocationFields: "neighborhood" | "building" | "entrance" | "floor" | "apartment";
    /**
     * LocationLabel
     * @enum {string}
     */
    LocationLabel: "home" | "work" | "other";
    /** MarketingGroupIn */
    MarketingGroupIn: {
      /** Title */
      title: string;
      /** Description */
      description?: string | null;
      coachRules?: components["schemas"]["SearchFilterIn"] | null;
      businessRules?: components["schemas"]["BusinessSearchFilterIn"] | null;
      /**
       * Categoryid
       * Format: uuid
       */
      categoryId: string;
      /**
       * Attachmentid
       * Format: uuid
       */
      attachmentId: string;
    };
    /** MarketingGroupUpdateIn */
    MarketingGroupUpdateIn: {
      /** Title */
      title?: string | null;
      /** Description */
      description?: string | null;
      coachRules?: components["schemas"]["SearchFilterIn"] | null;
      businessRules?: components["schemas"]["BusinessSearchFilterIn"] | null;
      /** Categoryid */
      categoryId?: string | null;
      /** Attachmentid */
      attachmentId?: string | null;
    };
    /** MediaFileOut */
    MediaFileOut: {
      /**
       * Contenttype
       * @description Content type of media file
       */
      contentType?: string | null;
      /**
       * Url
       * @description Full size url
       */
      url?: string | null;
      /**
       * Thumb
       * @description Thumbnail url
       */
      thumb?: string | null;
      /**
       * Videothumb
       * @description Video thumbnail url
       */
      videoThumb?: string | null;
      /** @description File visibility status in the system: on review, approved or rejected */
      status?: components["schemas"]["FileStatus"] | null;
      /**
       * Duration
       * @description Duration of media
       */
      duration?: number | null;
      /**
       * Originfilename
       * @description Original media filename
       */
      originFilename?: string | null;
      /**
       * Filesize
       * @description Filesize of media
       */
      filesize?: number | null;
    };
    /**
     * OpenHourType
     * @enum {string}
     */
    OpenHourType: "monday" | "tuesday" | "wednesday" | "thursday" | "friday" | "saturday" | "sunday";
    /**
     * OrderIn
     * @description Order by IDs
     */
    OrderIn: {
      /**
       * Order
       * @description List of IDs in the required order
       * @default []
       */
      order?: string[];
    };
    /**
     * ParkingType
     * @enum {string}
     */
    ParkingType: "free" | "paid" | "other";
    /** PaymentMethodIn */
    PaymentMethodIn: {
      /**
       * Name
       * @example Debit/Credit card
       */
      name: string;
      /**
       * Method
       * @example card
       * @enum {string}
       */
      method: "cash" | "card" | "bank_account" | "paypal" | "crypto" | "apple_pay" | "google_pay";
      /**
       * Commission
       * @example 0.1
       */
      commission: number;
      /** Default */
      default?: boolean | null;
      /**
       * Enabled
       * @default true
       */
      enabled?: boolean | null;
    };
    /** PaymentMethod */
    PaymentMethodOut: {
      /** Name */
      name?: string | null;
      /**
       * Default
       * @default false
       */
      default?: boolean;
      /** Method */
      method: string;
      brand?: components["schemas"]["CardPaymentBrandType"] | null;
      /** Last4 */
      last4?: string | null;
      /**
       * Type
       * @default standard
       */
      type?: string;
    };
    /** PaymentSessionOut */
    PaymentSessionOut: {
      /**
       * Id
       * Format: uuid
       * @description ID for payment schema
       */
      id: string;
      /** Price */
      price: number;
      /** Discount */
      discount: number;
      /** Balance */
      balance: number;
      /** Methodid */
      methodId?: string | null;
      /** Checkout */
      checkout?: Record<string, never> | null;
      paymentMethod?: components["schemas"]["SessionPaymentMethod"] | null;
      /** Expirationat */
      expirationAt?: string | null;
      /**
       * Createdat
       * Format: date-time
       */
      createdAt: string;
    };
    /**
     * PaymentState
     * @enum {string}
     */
    PaymentState: "awaiting" | "checkout" | "processing" | "received" | "canceled" | "failed" | "refund" | "deleted";
    /**
     * PaymentType
     * @enum {string}
     */
    PaymentType: "session" | "boosted";
    /** PrivateBusinessProfileOut */
    PrivateBusinessProfileOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /**
       * Categoryid
       * Format: uuid
       */
      categoryId: string;
      /** Categoryname */
      categoryName: string;
      /** Avatarurl */
      avatarUrl?: string | null;
      /**
       * Displayname
       * @description User display name
       */
      displayName?: string | null;
      /** Description */
      description?: string | null;
      /** Mediatype */
      mediaType?: string | null;
      /** Mediaurl */
      mediaUrl?: string | null;
      /** Mediapreviewurl */
      mediaPreviewUrl?: string | null;
      /**
       * Rating
       * @default 0
       */
      rating?: number;
      /**
       * Reviewscount
       * @description Number of reviews
       * @default 0
       */
      reviewsCount?: number;
      /** Phone */
      phone?: string | null;
      /** Email */
      email?: string | null;
      address?: components["schemas"]["PublicAddressOut"] | null;
      /**
       * Categories
       * @default []
       */
      categories?: string[];
      /**
       * Amenities
       * @default []
       */
      amenities?: string[];
      /**
       * Gallery
       * @default []
       */
      gallery?: components["schemas"]["MediaFileOut"][];
      /**
       * Servicetypes
       * @default []
       */
      serviceTypes?: components["schemas"]["BusinessServiceIn"][];
      /**
       * Contacts
       * @default []
       */
      contacts?: components["schemas"]["BusinessContactIn"][];
      /**
       * Openhours
       * @default []
       */
      openHours?: components["schemas"]["BusinessAvailabilityOut"][];
      /**
       * Faqs
       * @default []
       */
      faqs?: components["schemas"]["FAQDetailOut"][];
      /**
       * Boosted
       * @default false
       */
      boosted?: boolean;
      /**
       * Createdat
       * Format: date-time
       */
      createdAt: string;
      /** Branchid */
      branchId?: string | null;
      /**
       * Disabled
       * @default false
       */
      disabled?: boolean;
      /**
       * Alwaysopen
       * @default false
       */
      alwaysOpen?: boolean;
      /**
       * Branchcount
       * @default 0
       */
      branchCount?: number;
    };
    /** ProfileFilling */
    ProfileFilling: {
      /**
       * Allownonverify
       * @default false
       */
      allowNonVerify?: boolean;
      /**
       * Availability
       * @default false
       */
      availability?: boolean;
      /**
       * Avatar
       * @default false
       */
      avatar?: boolean;
      /**
       * Description
       * @default false
       */
      description?: boolean;
      /**
       * Experience
       * @default false
       */
      experience?: boolean;
      /**
       * Images
       * @default false
       */
      images?: boolean;
      /**
       * Languages
       * @default false
       */
      languages?: boolean;
      /**
       * Locations
       * @default false
       */
      locations?: boolean;
      /**
       * Media
       * @default false
       */
      media?: boolean;
      /**
       * Services
       * @default false
       */
      services?: boolean;
      /** Allergy */
      allergy?: boolean | null;
      /**
       * Certificates
       * @default false
       */
      certificates?: boolean;
      /** Awards */
      awards?: boolean | null;
      /**
       * Percentage
       * @default 0
       */
      percentage?: number | null;
    };
    /** PublicAddressOut */
    PublicAddressOut: {
      /** Lng */
      lng?: number;
      /** Lat */
      lat?: number;
      /**
       * Zoom
       * @default 17
       * @example 14
       */
      zoom?: number | null;
      /** @description accommodation */
      accommodation?: components["schemas"]["Accommodations"] | null;
      /** @description User allergy */
      allergy?: components["schemas"]["UserAllergy"] | null;
      /**
       * Address
       * @description Address
       * @example 548, floor 5, Cluster G, Tower Al mas, JLT, Dubai, UAE
       */
      address?: string | null;
      /**
       * Country
       * @description Country
       * @example United Arab Emirates
       */
      country?: string | null;
      /**
       * State
       * @description state
       * @example Dubai
       */
      state?: string | null;
      /**
       * City
       * @description city
       * @example Dubai
       */
      city?: string | null;
      /**
       * Line1
       * @description line1
       * @example Jumeirah Lake Towers
       */
      line1?: string | null;
      /**
       * Line2
       * @description line2
       * @example 1068, Tower Meadows 2
       */
      line2?: string | null;
      /**
       * Zip
       * @description zip (po box)
       */
      zip?: string | null;
      /**
       * Building
       * @description building
       * @example Tower Meadows 2
       */
      building?: string | null;
      /**
       * Entrance
       * @description entrance
       * @example main
       */
      entrance?: string | null;
      /**
       * Floor
       * @description floor
       * @example 12
       */
      floor?: string | null;
      /**
       * Apartment
       * @description apartment
       * @example 1245
       */
      apartment?: string | null;
      /**
       * Neighborhood
       * @description neighborhood
       */
      neighborhood?: string | null;
      /**
       * Radius
       * @description Radius in meters
       * @example 10000
       */
      radius?: number | null;
      /**
       * @description Location label
       * @default home
       * @example home
       */
      label?: components["schemas"]["LocationLabel"];
      /**
       * Labelother
       * @description Location label
       */
      labelOther?: string | null;
      /**
       * Details
       * @description notes for address
       */
      details?: string | null;
      parking?: components["schemas"]["ParkingType"] | null;
      /** Parkingdescription */
      parkingDescription?: string | null;
      /** Instructions */
      instructions?: string | null;
      /** Isdefault */
      isDefault?: boolean | null;
    };
    /** PublicCoachShortProfileOut */
    PublicCoachShortProfileOut: {
      /**
       * Firstname
       * @description User first
       * @example John
       */
      firstName?: string | null;
      /**
       * Lastname
       * @description User last name
       * @example Smith
       */
      lastName?: string | null;
      /**
       * @description User gender
       * @example male
       */
      gender?: components["schemas"]["UserGender"] | null;
      /**
       * Description
       * @description About
       */
      description?: string | null;
      /** Avatarurl */
      avatarUrl?: string | null;
      /** Mediatype */
      mediaType?: string | null;
      /** Mediaurl */
      mediaUrl?: string | null;
      /** Mediapreviewurl */
      mediaPreviewUrl?: string | null;
      /** Rating */
      rating?: number | null;
    };
    /** ReportAnalyticsOut */
    ReportAnalyticsOut: {
      /** Verifications */
      verifications: number;
      /** Verificationavatars */
      verificationAvatars: string[];
      /** Reports */
      reports: number;
      /** Reportspercentage */
      reportsPercentage?: number | null;
      /** Refunds */
      refunds: number;
      /** Refundspercentage */
      refundsPercentage?: number | null;
    };
    /** ReportOut */
    ReportOut: {
      /** Reason */
      reason: string;
      /** Description */
      description?: string | null;
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /** Sessionid */
      sessionId?: string | null;
      /**
       * Label
       * @default Assisted stretching session
       */
      label?: string | null;
      /** Refundamount */
      refundAmount?: number | null;
      /**
       * Attachments
       * @default []
       */
      attachments?: components["schemas"]["AttachmentFileOut"][];
      role?: components["schemas"]["UserType"] | null;
      state?: components["schemas"]["ReportState"];
      /**
       * Userid
       * Format: uuid
       */
      userId: string;
    };
    /**
     * ReportState
     * @enum {string}
     */
    ReportState: "pending" | "approved" | "rejected" | "closed" | "deleted";
    /**
     * ReportType
     * @enum {string}
     */
    ReportType: "session" | "refund" | "user_deleted" | "user_blocked" | "payment" | "verification" | "chain" | "private" | "business_claim" | "chat" | "client_profile" | "coach_profile";
    /** RevenueChartDataOut */
    RevenueChartDataOut: {
      /** Revenue */
      revenue: number;
      /** Profit */
      profit: number;
      /** Refund */
      refund: number;
      /** Fees */
      fees: number;
      /** Currentdate */
      currentDate?: string | null;
      /** Year */
      year?: number | null;
    };
    /**
     * RolesOrderByFields
     * @enum {string}
     */
    RolesOrderByFields: "name" | "-name" | "type" | "-type" | "created_at" | "-created_at" | "email" | "-email" | "is_registered" | "-is_registered";
    /**
     * RolesStatus
     * @enum {string}
     */
    RolesStatus: "joined" | "pending";
    /** SBMessageOut */
    SBMessageOut: {
      /** Messageid */
      messageId: number;
      type: components["schemas"]["SBMessageType"];
      /** Message */
      message: string;
      /**
       * Createdat
       * Format: date-time
       */
      createdAt: string;
      /**
       * Customtype
       * @default text
       */
      customType?: string;
      /**
       * Attachments
       * @default []
       */
      attachments?: components["schemas"]["AttachmentFileOut"][];
      location?: components["schemas"]["AddressBaseOut"] | null;
      /** Poll */
      poll?: Record<string, never> | null;
      user?: components["schemas"]["SBMessageUserOut"] | null;
      /**
       * Isreported
       * @default false
       */
      isReported?: boolean;
    };
    /**
     * SBMessageType
     * @enum {string}
     */
    SBMessageType: "admin" | "message" | "file" | "location";
    /** SBMessageUserOut */
    SBMessageUserOut: {
      /** Id */
      id?: string | null;
      /** Displayname */
      displayName?: string | null;
      /** Initials */
      initials?: string | null;
      /** Avatarurl */
      avatarUrl?: string | null;
    };
    /** SearchFilterIn */
    SearchFilterIn: {
      /**
       * Page
       * @example 0
       */
      page?: number | null;
      /**
       * Limit
       * @example 20
       */
      limit?: number | null;
      type?: components["schemas"]["UserCoachType"] | null;
      /**
       * Gender
       * @description Gender or none
       */
      gender?: components["schemas"]["UserGender"] | components["schemas"]["UserGender"][] | null;
      /**
       * Languages
       * @description List of all possible languages
       */
      languages?: components["schemas"]["UserLanguages"][] | null;
      price?: components["schemas"]["SearchFilterPriceIn"] | null;
      session?: components["schemas"]["SearchFilterSessionIn"] | null;
      /**
       * Days
       * @description List of all possible days in current location
       */
      days?: components["schemas"]["UserDays"][] | null;
      /**
       * Time
       * @description List of all possible time in current location
       */
      time?: string[] | null;
      /**
       * Services
       * @description List of all possible service types
       */
      services?: string[] | null;
      /**
       * Onlybookable
       * @default true
       */
      onlyBookable?: boolean;
      direction?: components["schemas"]["SearchOrderDirection"] | null;
      order?: components["schemas"]["SearchOrder"] | null;
      /** Marketingid */
      marketingId?: string | null;
      /** Addressid */
      addressId?: string | null;
      /** Categoryid */
      categoryId?: string | null;
      /** Lng */
      lng?: number | null;
      /** Lat */
      lat?: number | null;
      /** Radius */
      radius?: number | null;
      /**
       * Text
       * @description open text entry, currently used for name searching
       */
      text?: string | null;
    };
    /** SearchFilterPriceIn */
    SearchFilterPriceIn: {
      /** Min */
      min?: number | null;
      /** Max */
      max?: number | null;
    };
    /** SearchFilterSessionIn */
    SearchFilterSessionIn: {
      /** Min */
      min?: number | null;
      /** Max */
      max?: number | null;
    };
    /**
     * SearchOrder
     * @enum {string}
     */
    SearchOrder: "distance" | "price" | "rating" | "sessions" | "boosted";
    /**
     * SearchOrderDirection
     * @enum {string}
     */
    SearchOrderDirection: "asc" | "desc";
    /**
     * ServiceAccommodation
     * @enum {string}
     */
    ServiceAccommodation: "indoor" | "outdoor" | "any";
    /** Service */
    ServiceDetailOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /**
       * Name
       * @description This is a name of service
       */
      name: string;
      /** Description */
      description?: (string | null) | null;
      /**
       * Promo
       * @default false
       */
      promo?: boolean | null;
      /**
       * Price
       * @example 199.9
       */
      price?: number | null;
      /** Service Other Type */
      serviceOtherType?: (string | null) | null;
      /**
       * Session Minutes Duration
       * @description Duration session in minutes
       * @default 60
       */
      sessionMinutesDuration?: number;
      /**
       * Session Cancellation Hours
       * @description Session cancellation time before cancel
       * @default 8
       */
      sessionCancellationHours?: number;
      /** Servicetypes */
      serviceTypes?: string[] | null;
      /** Numberofsessions */
      numberOfSessions?: number | null;
      /** Expiresindays */
      expiresInDays?: number | null;
      /** Groupsession */
      groupSession?: boolean | null;
      /** Maxgroupsize */
      maxGroupSize?: number | null;
      /** @default USD */
      priceCurrency?: components["schemas"]["ServicePriceCurrencies"];
      /** Discount */
      discount?: number | null;
      /**
       * Prohibitrecording
       * @default true
       */
      prohibitRecording?: boolean;
      /** Rating */
      rating?: number | null;
      /**
       * Reviewscount
       * @default 0
       * @example 0
       */
      reviewsCount?: number;
      /** @default any */
      accommodation?: components["schemas"]["ServiceAccommodation"];
      /** Slots */
      slots?: components["schemas"]["AvailabilityOut"][] | null;
      /**
       * Properties
       * @description Extra property for user
       */
      properties?: components["schemas"]["UserPropOut"][] | null;
      /** Coachid */
      coachId?: string | null;
      user?: components["schemas"]["PublicCoachShortProfileOut"] | null;
      /**
       * Allowbooking
       * @description User allowed to book with this coach on this service
       */
      allowBooking?: boolean | null;
      bookingReason?: components["schemas"]["BookingReasonOut"] | null;
      /** Equipmenttitles */
      equipmentTitles?: string[] | null;
      /** @default review */
      status?: components["schemas"]["FileStatus"];
      /** Equipments */
      equipments?: components["schemas"]["EquipmentOut"][] | null;
    };
    /** Service */
    ServiceOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /**
       * Name
       * @description This is a name of service
       */
      name: string;
      /** Description */
      description?: (string | null) | null;
      /**
       * Promo
       * @default false
       */
      promo?: boolean | null;
      /**
       * Price
       * @example 199.9
       */
      price?: number | null;
      /** Service Other Type */
      serviceOtherType?: (string | null) | null;
      /**
       * Session Minutes Duration
       * @description Duration session in minutes
       * @default 60
       */
      sessionMinutesDuration?: number;
      /**
       * Session Cancellation Hours
       * @description Session cancellation time before cancel
       * @default 8
       */
      sessionCancellationHours?: number;
      /** Servicetypes */
      serviceTypes?: string[] | null;
      /** Numberofsessions */
      numberOfSessions?: number | null;
      /** Expiresindays */
      expiresInDays?: number | null;
      /** Groupsession */
      groupSession?: boolean | null;
      /** Maxgroupsize */
      maxGroupSize?: number | null;
      /** @default USD */
      priceCurrency?: components["schemas"]["ServicePriceCurrencies"];
      /** Discount */
      discount?: number | null;
      /**
       * Prohibitrecording
       * @default true
       */
      prohibitRecording?: boolean;
      /** Rating */
      rating?: number | null;
      /**
       * Reviewscount
       * @default 0
       * @example 0
       */
      reviewsCount?: number;
      /** @default any */
      accommodation?: components["schemas"]["ServiceAccommodation"];
      /** Slots */
      slots?: components["schemas"]["AvailabilityOut"][] | null;
      /**
       * Properties
       * @description Extra property for user
       */
      properties?: components["schemas"]["UserPropOut"][] | null;
      /** Coachid */
      coachId?: string | null;
      coach?: components["schemas"]["UserBaseInfo"] | null;
      /**
       * Allowbooking
       * @description User allowed to book with this coach on this service
       */
      allowBooking?: boolean | null;
      bookingReason?: components["schemas"]["BookingReasonOut"] | null;
      /** Equipmenttitles */
      equipmentTitles?: string[] | null;
      /** @default review */
      status?: components["schemas"]["FileStatus"];
    };
    /**
     * ServicePriceCurrencies
     * @enum {string}
     */
    ServicePriceCurrencies: "AED" | "USD" | "EUR";
    /** ServiceTypeIn */
    ServiceTypeIn: {
      /** Name */
      name: string;
      /** Description */
      description?: string;
    };
    /** ServiceType */
    ServiceTypeOut: {
      /**
       * Name
       * @description This is a name of service
       */
      name: string;
      /** Description */
      description?: (string | null) | null;
    };
    /** SessionCancellationDetails */
    SessionCancellationDetails: {
      /**
       * Reason
       * @description Description for report
       * @example Problem with session
       */
      reason?: string | null;
      /**
       * Description
       * @description Reason for report
       * @example Technical problem
       */
      description?: string | null;
      /** Refundamount */
      refundAmount?: number | null;
      source?: components["schemas"]["SessionCancellationSource"] | null;
      /** Createdat */
      createdAt?: string | null;
    };
    /**
     * SessionCancellationSource
     * @enum {string}
     */
    SessionCancellationSource: "client" | "coach" | "admin";
    /** SessionDropIn */
    SessionDropIn: {
      /**
       * Reason
       * @description Description for report
       * @example Problem with session
       */
      reason?: string | null;
      /**
       * Description
       * @description Reason for report
       * @example Technical problem
       */
      description?: string | null;
      /** Refundamount */
      refundAmount?: number | null;
    };
    /** SessionInfoAnalyticsOut */
    SessionInfoAnalyticsOut: {
      /**
       * Comparefrom
       * @description Comparison from date
       */
      compareFrom?: string | null;
      /**
       * Compareto
       * @description Comparison to date
       */
      compareTo?: string | null;
      /** Booked */
      booked: number;
      /** Bookedpercentage */
      bookedPercentage?: number | null;
      /** Completed */
      completed: number;
      /** Completedpercentage */
      completedPercentage?: number | null;
      /** Canceled */
      canceled: number;
      /** Canceledpercentage */
      canceledPercentage?: number | null;
      /** Reported */
      reported: number;
      /** Reportedpercentage */
      reportedPercentage?: number | null;
      /** Resolved */
      resolved: number;
      /** Resolvedpercentage */
      resolvedPercentage?: number | null;
      /** Refunded */
      refunded: number;
      /** Refundedpercentage */
      refundedPercentage?: number | null;
      /** Average */
      average?: number | null;
      /** Averagepercentage */
      averagePercentage?: number | null;
      /** Upcoming */
      upcoming?: number | null;
      /** Upcomingpercentage */
      upcomingPercentage?: number | null;
      /**
       * Currency
       * @default AED
       */
      currency?: string | null;
    };
    /** SessionPaymentMethod */
    SessionPaymentMethod: {
      /** Brand */
      brand?: string | null;
      /** Last4 */
      last4?: string | null;
      /** Type */
      type?: string | null;
    };
    /** SessionReviewBaseOut */
    SessionReviewBaseOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /**
       * Createdat
       * Format: date-time
       */
      createdAt?: string;
      /** Message */
      message?: string;
      /** State */
      state?: string | null;
      user?: components["schemas"]["SessionUserOut"] | null;
      /**
       * Attachments
       * @default []
       */
      attachments?: components["schemas"]["MediaFileOut"][];
    };
    /** SessionReviewInfoOut */
    SessionReviewInfoOut: {
      /**
       * Reviewscount
       * @default 0
       */
      reviewsCount?: number;
      /** Reviewspercentage */
      reviewsPercentage?: number | null;
      /**
       * Rating
       * @default 0
       */
      rating?: number;
      /** Ratingpercentage */
      ratingPercentage?: number | null;
      /**
       * Ratingsummary
       * @default {
       *   "1": 0,
       *   "2": 0,
       *   "3": 0,
       *   "4": 0,
       *   "5": 0
       * }
       */
      ratingSummary?: {
        [key: string]: number;
      };
    };
    /** SessionReviewOut */
    SessionReviewOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /**
       * Createdat
       * Format: date-time
       */
      createdAt?: string;
      /** Message */
      message?: string;
      /** State */
      state?: string | null;
      user?: components["schemas"]["SessionUserOut"] | null;
      /**
       * Attachments
       * @default []
       */
      attachments?: components["schemas"]["MediaFileOut"][];
      /** Label */
      label?: string | null;
      /** Rating */
      rating?: number | null;
      /**
       * Sessionid
       * Format: uuid
       */
      sessionId?: string;
      /** Sessionname */
      sessionName?: string;
      /**
       * Clientid
       * Format: uuid
       */
      clientId?: string;
      /**
       * Coachid
       * Format: uuid
       */
      coachId?: string;
      /**
       * Threads
       * @default []
       */
      threads?: components["schemas"]["SessionReviewBaseOut"][];
      /**
       * Blockedyou
       * @default false
       */
      blockedYou?: boolean;
      /**
       * Blockedbyyou
       * @default false
       */
      blockedByYou?: boolean;
    };
    /**
     * SessionReviewState
     * @enum {string}
     */
    SessionReviewState: "approved" | "cancel" | "review" | "claim" | "deleted" | "hidden";
    /**
     * SessionState
     * @enum {string}
     */
    SessionState: "new" | "pending" | "updated_by_client" | "updated_by_coach" | "approved" | "canceled" | "upcoming" | "progress" | "refund_request" | "refund_approved" | "refund_rejected" | "completed" | "deleted" | "paid";
    /** SessionUserOut */
    SessionUserOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /** Firstname */
      firstName?: string | null;
      /** Lastname */
      lastName?: string | null;
      /**
       * Username
       * @default Anonymous
       */
      username?: string | null;
      /** Avatarurl */
      avatarUrl?: string | null;
      type?: components["schemas"]["UserType"] | null;
    };
    /** StretchResponse */
    StretchResponse: {
      /**
       * Status
       * @description Stretch status response
       * @default success
       */
      status?: string;
    };
    /**
     * StripeConnectStatus
     * @enum {string}
     */
    StripeConnectStatus: "unregistered" | "completed" | "pending" | "unverified";
    /** TotalRevenueAnalyticsOut */
    TotalRevenueAnalyticsOut: {
      /**
       * Comparefrom
       * @description Comparison from date
       */
      compareFrom?: string | null;
      /**
       * Compareto
       * @description Comparison to date
       */
      compareTo?: string | null;
      /** Revenue */
      revenue: number;
      /** Revenuepercentage */
      revenuePercentage?: number | null;
      /** Profit */
      profit: number;
      /** Profitpercentage */
      profitPercentage?: number | null;
      /** Refund */
      refund: number;
      /** Refundpercentage */
      refundPercentage?: number | null;
      /** Fees */
      fees: number;
      /** Feespercentage */
      feesPercentage?: number | null;
      /** Balance */
      balance?: number | null;
      /** Balancepercentage */
      balancePercentage?: number | null;
      /** @default AED */
      currency?: components["schemas"]["CurrencyCode"] | null;
    };
    /**
     * TransactionDirection
     * @enum {string}
     */
    TransactionDirection: "income" | "outcome";
    /**
     * TransactionStatus
     * @enum {string}
     */
    TransactionStatus: "completed" | "pending" | "canceled";
    /**
     * TransactionType
     * @enum {string}
     */
    TransactionType: "payment" | "withdrawal" | "balance";
    /** UpdateResponse */
    UpdateResponse: {
      /**
       * Status
       * @description Stretch status response
       * @default success
       */
      status?: string;
      /**
       * Updated
       * @default 0
       */
      updated?: number;
    };
    /**
     * UserAllergy
     * @enum {string}
     */
    UserAllergy: "none" | "cat" | "dog" | "unknown" | "all";
    /** UserAnalyticsOut */
    UserAnalyticsOut: {
      /**
       * Comparefrom
       * @description Comparison from date
       */
      compareFrom?: string | null;
      /**
       * Compareto
       * @description Comparison to date
       */
      compareTo?: string | null;
      /** New */
      new: number;
      /** Newpercentage */
      newPercentage: number;
      /** Male */
      male: number;
      /** Female */
      female: number;
      /** Other */
      other: number;
      /**
       * Avatarurls
       * @default []
       */
      avatarUrls?: string[] | null;
    };
    /** UserBaseInfo */
    UserBaseInfo: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /**
       * Displayname
       * @description User display name
       * @example Smith
       */
      displayName?: string | null;
      /** Firstname */
      firstName: string;
      /** Lastname */
      lastName: string;
      /** Avatarurl */
      avatarUrl?: string | null;
      type: components["schemas"]["UserType"];
      /**
       * Isdeleted
       * @default false
       */
      isDeleted?: boolean;
    };
    /**
     * UserCoachType
     * @enum {string}
     */
    UserCoachType: "coach" | "studio" | "business";
    /** UserDataValidateField */
    UserDataValidateField: {
      /** Error */
      error: string;
      /** Message */
      message: string;
      /** Field */
      field: string;
    };
    /**
     * UserDataValidateOut
     * @description Validated User
     */
    UserDataValidateOut: {
      /** Message */
      message: string;
      /** Error */
      error: string;
      /** Fields */
      fields: components["schemas"]["UserDataValidateField"][];
    };
    /**
     * UserDays
     * @enum {string}
     */
    UserDays: "monday" | "tuesday" | "wednesday" | "thursday" | "friday" | "saturday" | "sunday";
    /**
     * UserGender
     * @enum {string}
     */
    UserGender: "male" | "female" | "other";
    /**
     * UserLanguages
     * @enum {string}
     */
    UserLanguages: "ab" | "aa" | "af" | "ak" | "sq" | "am" | "ar" | "an" | "hy" | "as" | "av" | "ae" | "ay" | "az" | "bm" | "ba" | "eu" | "be" | "bn" | "bh" | "bi" | "bs" | "br" | "bg" | "my" | "ca" | "ch" | "ce" | "ny" | "zh" | "cv" | "kw" | "co" | "cr" | "hr" | "cs" | "da" | "dv" | "nl" | "dz" | "en" | "eo" | "et" | "ee" | "fo" | "fj" | "fi" | "fr" | "ff" | "gl" | "ka" | "de" | "el" | "gn" | "gu" | "ht" | "ha" | "he" | "hz" | "hi" | "ho" | "hu" | "ia" | "id" | "ie" | "ga" | "ig" | "ik" | "io" | "is" | "it" | "iu" | "ja" | "jv" | "kl" | "kn" | "kr" | "ks" | "kk" | "km" | "ki" | "rw" | "ky" | "kv" | "kg" | "ko" | "ku" | "kj" | "la" | "lb" | "lg" | "li" | "ln" | "lo" | "lt" | "lu" | "lv" | "gv" | "mk" | "mg" | "ms" | "ml" | "mt" | "mi" | "mr" | "mh" | "mn" | "na" | "nv" | "nd" | "ne" | "ng" | "nb" | "nn" | "no" | "ii" | "nr" | "oc" | "oj" | "cu" | "om" | "or" | "os" | "pa" | "pi" | "fa" | "pl" | "ps" | "pt" | "qu" | "rm" | "rn" | "ro" | "ru" | "sa" | "sc" | "sd" | "se" | "sm" | "sg" | "sr" | "gd" | "sn" | "si" | "sk" | "sl" | "so" | "st" | "es" | "su" | "sw" | "ss" | "sv" | "ta" | "te" | "tg" | "th" | "ti" | "bo" | "tk" | "tl" | "tn" | "to" | "tr" | "ts" | "tt" | "tw" | "ty" | "ug" | "uk" | "ur" | "uz" | "ve" | "vi" | "vo" | "wa" | "cy" | "wo" | "fy" | "xh" | "yi" | "yo" | "za" | "zu";
    /** UserProfileOut */
    UserProfileOut: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /**
       * Displayname
       * @description User display name
       * @example Smith
       */
      displayName?: string | null;
      /** Firstname */
      firstName: string;
      /** Lastname */
      lastName: string;
      /** Avatarurl */
      avatarUrl?: string | null;
      type: components["schemas"]["UserType"];
      /**
       * Isdeleted
       * @default false
       */
      isDeleted?: boolean;
      /** @description User allergy */
      allergy?: components["schemas"]["UserAllergy"] | null;
      /** Rating */
      rating?: number | null;
      /**
       * Reviewscount
       * @description Number of reviews
       * @default 0
       */
      reviewsCount?: number | null;
      /** Sessionscount */
      sessionsCount?: number | null;
      /**
       * Registrationdate
       * @description User registration date
       */
      registrationDate?: string | null;
      /** Verified */
      verified?: boolean | null;
      /**
       * Experience
       * @description User experience
       */
      experience?: number | null;
      /** Allownonverify */
      allowNonVerify?: boolean | null;
      /**
       * @description User gender
       * @example male
       */
      gender?: components["schemas"]["UserGender"] | null;
      /**
       * Avatartype
       * @description Avatar type of banner picture
       */
      avatarType?: string | null;
      /** Avatarimageurl */
      avatarImageUrl?: string | null;
      /** Mediatype */
      mediaType?: string | null;
      /** Mediaurl */
      mediaUrl?: string | null;
      /** Mediapreviewurl */
      mediaPreviewUrl?: string | null;
      /**
       * Description
       * @description About
       */
      description?: string | null;
      /**
       * Languages
       * @description Languages
       */
      languages: string | {
        [key: string]: string;
      } | null;
      /**
       * Properties
       * @description Extra property for user
       */
      properties?: components["schemas"]["UserPropOut"][] | null;
      /**
       * Phone
       * @description Phone number in international format
       * @example +97100000000
       */
      phone?: string | null;
      /**
       * Whatsapp
       * @description Whatsapp  number in international format
       * @example +97100000000
       */
      whatsapp?: string | null;
      /** @description KYC verification */
      kycStatus?: components["schemas"]["StripeConnectStatus"] | null;
      /** Chaturl */
      chatUrl?: string | null;
      /**
       * Disabled
       * @default false
       */
      disabled?: boolean;
      /** Recoverydeadline */
      recoveryDeadline?: string | null;
      /**
       * Blockedyou
       * @default false
       */
      blockedYou?: boolean;
      /**
       * Blockedbyyou
       * @default false
       */
      blockedByYou?: boolean;
      /**
       * Reportedbyyou
       * @default false
       */
      reportedByYou?: boolean;
      /**
       * Username
       * @description Username input
       */
      username?: string | null;
      /**
       * Email
       * @description Email format
       * @example info@stretch.com
       */
      email?: string | null;
      /**
       * Timezone
       * @description Default timezone for user
       * @example Asia/Dubai
       */
      timezone?: string | null;
      /**
       * Birthdate
       * @description User Birth date
       * @example 2000-07-08
       */
      birthDate?: string | null;
      /** @description User balance */
      balance?: components["schemas"]["BalanceOut"] | null;
      /**
       * Verifiedphone
       * @description Phone verification
       */
      verifiedPhone?: boolean | null;
      /**
       * Verifiedemail
       * @description Email verification
       */
      verifiedEmail?: boolean | null;
      /**
       * Available
       * @description Availability
       */
      available?: boolean | null;
      /** Verifycode */
      verifyCode?: string | null;
      /**
       * Istemporary
       * @default false
       */
      isTemporary?: boolean;
      /**
       * Totalpayment
       * @description Total payment amount
       */
      totalPayment?: number | null;
      /**
       * Totalpaymentcurrency
       * @description Payment currency
       */
      totalPaymentCurrency?: string | null;
      /**
       * Publicviewallowed
       * @description client only, allow clients to view profile?
       * @example false
       */
      publicViewAllowed?: boolean | null;
      /** @description Profile picture completion status */
      profileCompletion?: components["schemas"]["ProfileFilling"] | null;
      /**
       * Sbaccesstoken
       * @description Access token for sendbird registration
       */
      sbAccessToken?: string | null;
    };
    /** UserPromoOut */
    UserPromoOut: {
      /** Price */
      price: number;
      /** Message */
      message: string;
      /** @default boosted */
      type?: components["schemas"]["UserPromoType"] | null;
      /**
       * Enabled
       * @default true
       */
      enabled?: boolean | null;
      /** Startdate */
      startDate?: string | null;
      /** Expirydate */
      expiryDate?: string | null;
    };
    /**
     * UserPromoType
     * @enum {string}
     */
    UserPromoType: "boosted";
    /** UserPropOut */
    UserPropOut: {
      /** Name */
      name: string;
      /** Value */
      value?: string | number | boolean | null;
      /** Title */
      title?: string | null;
      /** Description */
      description?: string | null;
      /** Type */
      type: string | null;
      /** Options */
      options?: {
        [key: string]: string;
      } | null;
    };
    /**
     * UserPropertyType
     * @enum {string}
     */
    UserPropertyType: "empty" | "id" | "int" | "bool" | "float" | "str" | "list" | "dict" | "select" | "radio" | "datetime";
    /**
     * UserType
     * @enum {string}
     */
    UserType: "guest" | "coach" | "client" | "studio" | "business" | "support" | "admin";
    /** ValidationError */
    ValidationError: {
      /** Location */
      loc: (string | number)[];
      /** Message */
      msg: string;
      /** Error Type */
      type: string;
    };
    /** FileBase */
    VideoFileOut: {
      /**
       * Id
       * @description UUID of file
       */
      id?: string | null;
      /**
       * Title
       * @description The title name of the uploaded file
       */
      title?: string | null;
      /**
       * Description
       * @description The description for uploaded file
       */
      description?: string | null;
      /**
       * Source
       * @default local
       */
      source?: string;
      /**
       * Originfilename
       * @description The original file name given when uploading the file
       */
      originFilename?: string | null;
      /** Filesize */
      filesize?: number | null;
      /**
       * Contenttype
       * @description File contents in MIME format
       */
      contentType?: string | null;
      /**
       * Url
       * @description Direct link to the downloaded file. The file can be recompressed when it is placed in the storage
       */
      url?: string | null;
      /**
       * Thumb
       * @description Link to the preview file
       */
      thumb?: string | null;
      /** @description File visibility status in the system: on review, approved or rejected */
      status?: components["schemas"]["FileStatus"] | null;
      /**
       * Duration
       * @description Duration in seconds
       */
      duration?: number | null;
    };
    /**
     * WithdrawalState
     * @enum {string}
     */
    WithdrawalState: "pending" | "completed" | "rejected";
    /** WithdrawalWalletDetail */
    WithdrawalWalletDetail: {
      /** Name */
      name?: string | null;
      /** Brand */
      brand?: string | null;
      /** Accountname */
      accountName?: string | null;
    };
    /**
     * AdminSessionOrderFields
     * @enum {string}
     */
    stretchcore__models__review__schema__admin_session_review__AdminSessionOrderFields: "rating" | "-rating" | "created_at" | "-created_at";
    /**
     * AdminSessionOrderFields
     * @enum {string}
     */
    stretchcore__models__session__schema__admin_session__AdminSessionOrderFields: "created_at" | "-created_at" | "date_start" | "-date_start" | "name" | "-name" | "price" | "-price";
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /** Import Categories */
  import_categories_api_v1_admin_geo_post: {
    parameters: {
      query: {
        type: components["schemas"]["GeoImportFileType"];
      };
    };
    requestBody: {
      content: {
        "multipart/form-data": components["schemas"]["Body_import_categories_api_v1_admin_geo_post"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Coaches */
  get_coaches_api_v1_admin_coaches_get: {
    parameters: {
      query?: {
        search?: string | null;
        disabled?: boolean | null;
        availability?: boolean | null;
        verified?: boolean | null;
        isDeleted?: boolean | null;
        page?: number | null;
        limit?: number | null;
        sorting?: components["schemas"]["AdminCoachOrderFields"] | null;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AdminCoachSummaryViewOut"][];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Coaches Count */
  get_coaches_count_api_v1_admin_coaches_count_get: {
    parameters: {
      query?: {
        search?: string | null;
        disabled?: boolean | null;
        availability?: boolean | null;
        verified?: boolean | null;
        isDeleted?: boolean | null;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AdminTotalCountOut"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Coach Details */
  get_coach_details_api_v1_admin_coach__coach_id__get: {
    parameters: {
      path: {
        coach_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AdminCoachDetailViewOut"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update Coach */
  update_coach_api_v1_admin_coach__coach_id__put: {
    parameters: {
      path: {
        coach_id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AdminCoachUpdateIn"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["StretchResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete Coach */
  delete_coach_api_v1_admin_coach__coach_id__delete: {
    parameters: {
      query?: {
        reason?: string | null;
        description?: string | null;
      };
      path: {
        coach_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["StretchResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Create New Coach */
  create_new_coach_api_v1_admin_coach_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["AdminCreateCoachIn"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserProfileOut"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Boost Coach Profile */
  boost_coach_profile_api_v1_admin_coach__coach_id__boost_profile_post: {
    parameters: {
      path: {
        coach_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["StretchResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Coach Clients List */
  get_coach_clients_list_api_v1_admin_coach__coach_id__clients_get: {
    parameters: {
      query?: {
        search?: string | null;
        disabled?: boolean | null;
        availability?: boolean | null;
        verified?: boolean | null;
        isDeleted?: boolean | null;
        sorting?: components["schemas"]["AdminClientOrderFields"] | null;
        page?: number | null;
        limit?: number | null;
        blocked?: boolean | null;
      };
      path: {
        coach_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AdminClientSummaryViewOut"][];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Coach Clients List Count */
  get_coach_clients_list_count_api_v1_admin_coach__coach_id__clients_count_get: {
    parameters: {
      query?: {
        search?: string | null;
        disabled?: boolean | null;
        availability?: boolean | null;
        verified?: boolean | null;
        isDeleted?: boolean | null;
        sorting?: components["schemas"]["AdminClientOrderFields"] | null;
      };
      path: {
        coach_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AdminCoachClientListCountOut"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Clients */
  get_clients_api_v1_admin_clients_get: {
    parameters: {
      query?: {
        search?: string | null;
        disabled?: boolean | null;
        availability?: boolean | null;
        verified?: boolean | null;
        isDeleted?: boolean | null;
        sorting?: components["schemas"]["AdminClientOrderFields"] | null;
        page?: number | null;
        limit?: number | null;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AdminClientSummaryViewOut"][];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Clients Count */
  get_clients_count_api_v1_admin_clients_count_get: {
    parameters: {
      query?: {
        search?: string | null;
        disabled?: boolean | null;
        availability?: boolean | null;
        verified?: boolean | null;
        isDeleted?: boolean | null;
        sorting?: components["schemas"]["AdminClientOrderFields"] | null;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AdminTotalCountOut"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Client Details */
  get_client_details_api_v1_admin_client__client_id__get: {
    parameters: {
      path: {
        client_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AdminClientDetailOut"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update Client */
  update_client_api_v1_admin_client__client_id__put: {
    parameters: {
      path: {
        client_id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AdminCoachUpdateIn"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["StretchResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete Client */
  delete_client_api_v1_admin_client__client_id__delete: {
    parameters: {
      query?: {
        reason?: string | null;
        description?: string | null;
      };
      path: {
        client_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["StretchResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Client Summary Info */
  get_client_summary_info_api_v1_admin_client__client_id__info_get: {
    parameters: {
      query?: {
        fromDate?: string | null;
        toDate?: string | null;
        allTime?: boolean | null;
      };
      path: {
        client_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AdminClientSummaryOut"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Create New Client */
  create_new_client_api_v1_admin_client_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["AdminCreateClientIn"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserProfileOut"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Client Coaches List */
  get_client_coaches_list_api_v1_admin_client__client_id__coaches_get: {
    parameters: {
      query?: {
        search?: string | null;
        disabled?: boolean | null;
        availability?: boolean | null;
        verified?: boolean | null;
        isDeleted?: boolean | null;
        page?: number | null;
        limit?: number | null;
        sorting?: components["schemas"]["AdminCoachOrderFields"] | null;
      };
      path: {
        client_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AdminCoachSummaryViewOut"][];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Client Coaches List Count */
  get_client_coaches_list_count_api_v1_admin_client__client_id__coaches_count_get: {
    parameters: {
      query?: {
        search?: string | null;
        disabled?: boolean | null;
        availability?: boolean | null;
        verified?: boolean | null;
        isDeleted?: boolean | null;
      };
      path: {
        client_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AdminTotalCountOut"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Categories */
  get_categories_api_v1_admin_categories_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["CategoryOut"][];
        };
      };
    };
  };
  /** Post Create Category */
  post_create_category_api_v1_admin_category_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CategoryIn"];
      };
    };
    responses: {
      /** @description Successful Response */
      201: {
        content: {
          "application/json": components["schemas"]["CategoryOut"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Put Update Category */
  put_update_category_api_v1_admin_category__category_id__put: {
    parameters: {
      path: {
        category_id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CategoryUpdateIn"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["CategoryOut"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete Category */
  delete_category_api_v1_admin_category__category_id__delete: {
    parameters: {
      path: {
        category_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["DeleteResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Set Category Order */
  set_category_order_api_v1_admin_categories_order_put: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["OrderIn"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["StretchResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Import Categories
   * @description Import business by csv file
   */
  import_categories_api_v1_admin_category_import_post: {
    requestBody: {
      content: {
        "multipart/form-data": components["schemas"]["Body_import_categories_api_v1_admin_category_import_post"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Import Business
   * @description Import business by csv file
   */
  import_business_api_v1_admin_business_import_post: {
    requestBody: {
      content: {
        "multipart/form-data": components["schemas"]["Body_import_business_api_v1_admin_business_import_post"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Import Business External
   * @description Import business/branches by csv file
   */
  import_business_external_api_v1_admin_business_import_external_post: {
    requestBody: {
      content: {
        "multipart/form-data": components["schemas"]["Body_import_business_external_api_v1_admin_business_import_external_post"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Business Autocomplete */
  get_business_autocomplete_api_v1_admin_business_autocomplete_get: {
    parameters: {
      query: {
        /** @example Fitness First */
        query: string;
        page?: number | null;
        limit?: number | null;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AdminBusinessAutocompleteOut"][];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Business Filters */
  get_business_filters_api_v1_admin_business_filters_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["BusinessFiltersOut"];
        };
      };
    };
  };
  /** Search Businesses */
  search_businesses_api_v1_admin_businesses_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["AdminBusinessQueryIn"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AdminBusinessSummaryViewOut"][];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Businesses Count */
  get_businesses_count_api_v1_admin_businesses_count_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["AdminBusinessQueryCountIn"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AdminTotalCountOut"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Business Details */
  get_business_details_api_v1_admin_business__business_id__get: {
    parameters: {
      path: {
        business_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["PrivateBusinessProfileOut"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update Business Status */
  update_business_status_api_v1_admin_business__business_id__put: {
    parameters: {
      path: {
        business_id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AdminCoachUpdateIn"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["StretchResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete Business */
  delete_business_api_v1_admin_business__business_id__delete: {
    parameters: {
      query?: {
        reason?: string | null;
        description?: string | null;
      };
      path: {
        business_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["StretchResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Create New Business */
  create_new_business_api_v1_admin_business_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["AdminCreateBusinessIn"];
      };
    };
    responses: {
      /** @description Successful Response */
      201: {
        content: {
          "application/json": components["schemas"]["UserProfileOut"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get User Blacklist */
  get_user_blacklist_api_v1_admin_user__user_id__blacklist_get: {
    parameters: {
      query?: {
        search?: string | null;
        disabled?: boolean | null;
        availability?: boolean | null;
        verified?: boolean | null;
        isDeleted?: boolean | null;
        sorting?: components["schemas"]["AdminClientOrderFields"] | null;
        page?: number | null;
        limit?: number | null;
      };
      path: {
        user_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AdminClientSummaryViewOut"][];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get User Blacklist Count */
  get_user_blacklist_count_api_v1_admin_user__user_id__blacklist_count_get: {
    parameters: {
      query?: {
        search?: string | null;
        disabled?: boolean | null;
        availability?: boolean | null;
        verified?: boolean | null;
        isDeleted?: boolean | null;
        sorting?: components["schemas"]["AdminClientOrderFields"] | null;
      };
      path: {
        user_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Edit User */
  edit_user_api_v1_admin_user__user_id__edit_put: {
    parameters: {
      path: {
        user_id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AdminUserUpdateIn"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserProfileOut"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** User Config */
  user_config_api_v1_admin_user_config_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AdminUserConfigOut"];
        };
      };
    };
  };
  /** Get User Filters */
  get_user_filters_api_v1_admin_user_filters_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["BusinessFiltersOut"];
        };
      };
    };
  };
  /** Get Users */
  get_users_api_v1_admin_users_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["AdminUserQueryIn"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AdminUserListOut"][];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Users Count */
  get_users_count_api_v1_admin_users_count_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["AdminUserCountQueryIn"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AdminTotalCountOut"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Import Users
   * @description Upload users from file
   * :param file: file format: email, phone, first_name, last_name
   * :param user:
   * :return:
   */
  import_users_api_v1_admin_user_import_post: {
    requestBody: {
      content: {
        "multipart/form-data": components["schemas"]["Body_import_users_api_v1_admin_user_import_post"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Validate User Registration */
  validate_user_registration_api_v1_admin_user_validate_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["AdminUserDataValidateIn"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["StretchResponse"] | components["schemas"]["UserDataValidateOut"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get User Filters */
  get_user_filters_api_v1_admin_user__user_id__recover_post: {
    parameters: {
      path: {
        user_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["StretchResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Support Roles */
  get_support_roles_api_v1_admin_user_roles_get: {
    parameters: {
      query?: {
        page?: number | null;
        limit?: number | null;
        search?: string | null;
        type?: components["schemas"]["UserType"] | null;
        createdAt?: string | null;
        status?: components["schemas"]["RolesStatus"] | null;
        sorting?: components["schemas"]["RolesOrderByFields"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AdminRolesOut"][];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Support Roles Count */
  get_support_roles_count_api_v1_admin_user_roles_count_get: {
    parameters: {
      query?: {
        search?: string | null;
        type?: components["schemas"]["UserType"] | null;
        createdAt?: string | null;
        status?: components["schemas"]["RolesStatus"] | null;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AdminTotalCountOut"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Send User Invitation */
  send_user_invitation_api_v1_admin_user_role_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["AdminInviteIn"];
      };
    };
    responses: {
      /** @description Successful Response */
      201: {
        content: {
          "application/json": components["schemas"]["StretchResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Resend User Invitation */
  resend_user_invitation_api_v1_admin_user_role__user_id__post: {
    parameters: {
      path: {
        user_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["StretchResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Revoke User Access */
  revoke_user_access_api_v1_admin_user_role__user_id__delete: {
    parameters: {
      path: {
        user_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["StretchResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Sessions */
  get_sessions_api_v1_admin_sessions_get: {
    parameters: {
      query?: {
        search?: string | null;
        page?: number | null;
        limit?: number | null;
        coachId?: string | null;
        clientId?: string | null;
        promo?: boolean | null;
        fromDate?: string | null;
        toDate?: string | null;
        sorting?: components["schemas"]["stretchcore__models__session__schema__admin_session__AdminSessionOrderFields"] | null;
        state?: components["schemas"]["SessionState"] | null;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AdminSessionSummaryViewOut"][];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Session Count */
  get_session_count_api_v1_admin_sessions_count_get: {
    parameters: {
      query?: {
        search?: string | null;
        page?: number | null;
        limit?: number | null;
        coachId?: string | null;
        clientId?: string | null;
        promo?: boolean | null;
        fromDate?: string | null;
        toDate?: string | null;
        sorting?: components["schemas"]["stretchcore__models__session__schema__admin_session__AdminSessionOrderFields"] | null;
        state?: components["schemas"]["SessionState"] | null;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AdminSessionSummaryCountOut"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Session */
  get_session_api_v1_admin_session__session_id__get: {
    parameters: {
      query?: {
        dateFormat?: components["schemas"]["AvailabilityDateFormat"];
      };
      path: {
        session_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AdminSessionViewOut"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Refund Session */
  refund_session_api_v1_admin_session__session_id__refund_put: {
    parameters: {
      path: {
        session_id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["SessionDropIn"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["StretchResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Create Feedback */
  create_feedback_api_v1_admin_support_feedback_post: {
    requestBody: {
      content: {
        "multipart/form-data": components["schemas"]["Body_create_feedback_api_v1_admin_support_feedback_post"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["StretchResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Reviews */
  get_reviews_api_v1_admin_reviews_get: {
    parameters: {
      query?: {
        page?: number | null;
        limit?: number | null;
        fromDate?: string | null;
        toDate?: string | null;
        allTime?: boolean | null;
        coachId?: string | null;
        clientId?: string | null;
        serviceId?: string | null;
        sessionId?: string | null;
        state?: components["schemas"]["SessionReviewState"] | null;
        sorting?: components["schemas"]["stretchcore__models__review__schema__admin_session_review__AdminSessionOrderFields"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["SessionReviewOut"][];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Reviews Analytics Info */
  get_reviews_analytics_info_api_v1_admin_review__user_id__info_get: {
    parameters: {
      query?: {
        fromDate?: string | null;
        toDate?: string | null;
        allTime?: boolean | null;
      };
      path: {
        user_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["SessionReviewInfoOut"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update Review */
  update_review_api_v1_admin_review__review_id__put: {
    parameters: {
      path: {
        review_id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AdminSessionReviewUpdateIn"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["StretchResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete Review */
  delete_review_api_v1_admin_review__review_id__delete: {
    parameters: {
      path: {
        review_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["StretchResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Transactions */
  get_transactions_api_v1_admin_transactions_get: {
    parameters: {
      query?: {
        page?: number | null;
        limit?: number | null;
        search?: string | null;
        fromDate?: string | null;
        toDate?: string | null;
        allTime?: boolean | null;
        status?: components["schemas"]["TransactionStatus"] | null;
        coachId?: string | null;
        clientId?: string | null;
        sorting?: components["schemas"]["AdminTransactionOrderFields"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AdminTransactionViewOut"][];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Transaction Count */
  get_transaction_count_api_v1_admin_transactions_count_get: {
    parameters: {
      query?: {
        search?: string | null;
        fromDate?: string | null;
        toDate?: string | null;
        allTime?: boolean | null;
        status?: components["schemas"]["TransactionStatus"] | null;
        coachId?: string | null;
        clientId?: string | null;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AdminTransactionSummaryCountOut"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Transaction Info */
  get_transaction_info_api_v1_admin_transactions_info_get: {
    parameters: {
      query?: {
        search?: string | null;
        fromDate?: string | null;
        toDate?: string | null;
        allTime?: boolean | null;
        status?: components["schemas"]["TransactionStatus"] | null;
        coachId?: string | null;
        clientId?: string | null;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AdminTransactionSummaryInfoOut"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Download Transaction File */
  download_transaction_file_api_v1_admin_transaction_download_get: {
    parameters: {
      query?: {
        search?: string | null;
        fromDate?: string | null;
        toDate?: string | null;
        allTime?: boolean | null;
        status?: components["schemas"]["TransactionStatus"] | null;
        coachId?: string | null;
        clientId?: string | null;
        filetype?: components["schemas"]["DataFrameFileType"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Transaction Details */
  get_transaction_details_api_v1_admin_transaction__transaction_id__get: {
    parameters: {
      path: {
        transaction_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AdminTransactionDetailView"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Refund Transaction */
  refund_transaction_api_v1_admin_transaction__transaction_id__refund_put: {
    parameters: {
      path: {
        transaction_id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["SessionDropIn"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["StretchResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Verifications */
  get_verifications_api_v1_admin_verifications_get: {
    parameters: {
      query?: {
        page?: number | null;
        limit?: number | null;
        search?: string | null;
        state?: components["schemas"]["ReportState"] | null;
        fromDate?: string | null;
        sorting?: components["schemas"]["AdminVerificationOrderIn"] | null;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AdminCoachVerifySummaryOut"][];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Verifications Count */
  get_verifications_count_api_v1_admin_verifications_count_get: {
    parameters: {
      query?: {
        search?: string | null;
        state?: components["schemas"]["ReportState"] | null;
        fromDate?: string | null;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AdminCoachVerifySummaryCountOut"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Create Coach Report */
  create_coach_report_api_v1_admin_verification__coach_id__report_post: {
    parameters: {
      path: {
        coach_id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AdminRefundUpdateIn"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AdminResolvedReportOut"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Refunds */
  get_refunds_api_v1_admin_refunds_get: {
    parameters: {
      query?: {
        page?: number | null;
        limit?: number | null;
        fromDate?: string | null;
        toDate?: string | null;
        allTime?: boolean | null;
        search?: string | null;
        state?: components["schemas"]["ReportState"] | null;
        sorting?: components["schemas"]["AdminReportOrderBy"] | null;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AdminRefundSummaryOut"][];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Refunds Count */
  get_refunds_count_api_v1_admin_refunds_count_get: {
    parameters: {
      query?: {
        fromDate?: string | null;
        toDate?: string | null;
        allTime?: boolean | null;
        search?: string | null;
        state?: components["schemas"]["ReportState"] | null;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AdminRefundSummaryCountOut"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Refund Details */
  get_refund_details_api_v1_admin_refund__refund_id__get: {
    parameters: {
      path: {
        refund_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AdminReportDetailOut"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Resolve Refund */
  resolve_refund_api_v1_admin_refund__refund_id__put: {
    parameters: {
      path: {
        refund_id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AdminRefundUpdateIn"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AdminResolvedReportOut"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Reports */
  get_reports_api_v1_admin_reports_get: {
    parameters: {
      query?: {
        page?: number | null;
        limit?: number | null;
        search?: string | null;
        fromDate?: string | null;
        toDate?: string | null;
        allTime?: boolean | null;
        direction?: components["schemas"]["AdminReportDirection"] | null;
        state?: components["schemas"]["AdminReportState"] | null;
        coachId?: string | null;
        clientId?: string | null;
        sorting?: components["schemas"]["AdminReportOrderBy"] | null;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AdminReportSummaryOut"][];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Reports Count */
  get_reports_count_api_v1_admin_reports_count_get: {
    parameters: {
      query?: {
        search?: string | null;
        fromDate?: string | null;
        toDate?: string | null;
        allTime?: boolean | null;
        direction?: components["schemas"]["AdminReportDirection"] | null;
        state?: components["schemas"]["AdminReportState"] | null;
        coachId?: string | null;
        clientId?: string | null;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AdminReportSummaryCountOut"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Report Details */
  get_report_details_api_v1_admin_report__report_id__get: {
    parameters: {
      path: {
        report_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AdminReportDetailOut"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get User Properties */
  get_user_properties_api_v1_admin_config_fields_get: {
    parameters: {
      query?: {
        affiliation?: components["schemas"]["AdminPropertyFieldAffiliationFilterIn"] | string | null;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AdminUserPropertyFieldOut"][];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Create New User Property */
  create_new_user_property_api_v1_admin_config_field_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["AdminUserPropertyFieldIn"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AdminUserPropertyFieldOut"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update User Property */
  update_user_property_api_v1_admin_config_field__property_field_id__put: {
    parameters: {
      path: {
        property_field_id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AdminUserPropertyFieldUpdateIn"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AdminUserPropertyFieldOut"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete User Property */
  delete_user_property_api_v1_admin_config_field__property_field_id__delete: {
    parameters: {
      path: {
        property_field_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["StretchResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Consumers */
  get_consumers_api_v1_admin_config_consumers_get: {
    parameters: {
      query?: {
        includeBusiness?: boolean;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ConsumerOut"][];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Create Consumer */
  create_consumer_api_v1_admin_config_consumer_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["ConsumerIn"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ConsumerOut"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update Consumer */
  update_consumer_api_v1_admin_config_consumer__client_id__put: {
    parameters: {
      path: {
        client_id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ConsumerUpdateIn"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ConsumerOut"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete Consumer */
  delete_consumer_api_v1_admin_config_consumer__client_id__delete: {
    parameters: {
      path: {
        client_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["StretchResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Consumer Languages */
  get_consumer_languages_api_v1_admin_config_languages_get: {
    parameters: {
      query: {
        config_type: components["schemas"]["AdminConsumerConfigType"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["LanguagesConfigOut"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Consumer Currencies */
  get_consumer_currencies_api_v1_admin_config_currencies_get: {
    parameters: {
      query: {
        config_type: components["schemas"]["AdminConsumerConfigType"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": string[];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Bulk Create Service Types */
  bulk_create_service_types_api_v1_admin_config_service_types_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["ServiceTypeIn"][];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ServiceTypeOut"][];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete Service Type */
  delete_service_type_api_v1_admin_config_service_type__service_type_id__delete: {
    parameters: {
      path: {
        service_type_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["StretchResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Create Or Update Method */
  create_or_update_method_api_v1_admin_config_method_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["PaymentMethodIn"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["PaymentMethodOut"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Withdrawals */
  get_withdrawals_api_v1_admin_withdrawals_get: {
    parameters: {
      query?: {
        page?: number | null;
        limit?: number | null;
        fromDate?: string | null;
        toDate?: string | null;
        allTime?: boolean | null;
        search?: string | null;
        status?: components["schemas"]["WithdrawalState"] | null;
        userId?: string | null;
        sorting?: components["schemas"]["AdminWithdrawalOrderFields"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AdminWithdrawalSummaryOut"][];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Withdrawals Count */
  get_withdrawals_count_api_v1_admin_withdrawals_count_get: {
    parameters: {
      query?: {
        fromDate?: string | null;
        toDate?: string | null;
        allTime?: boolean | null;
        search?: string | null;
        status?: components["schemas"]["WithdrawalState"] | null;
        userId?: string | null;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AdminWithdrawalSummaryCountOut"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Download Withdrawal File */
  download_withdrawal_file_api_v1_admin_withdrawal_download_get: {
    parameters: {
      query?: {
        fromDate?: string | null;
        toDate?: string | null;
        allTime?: boolean | null;
        search?: string | null;
        status?: components["schemas"]["WithdrawalState"] | null;
        userId?: string | null;
        filetype?: components["schemas"]["DataFrameFileType"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Withdrawal Details */
  get_withdrawal_details_api_v1_admin_withdrawal__withdrawal_id__get: {
    parameters: {
      path: {
        withdrawal_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AdminWithdrawalDetailOut"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Revenue Analytics */
  revenue_analytics_api_v1_admin_analytics_revenue_get: {
    parameters: {
      query?: {
        fromDate?: string | null;
        toDate?: string | null;
        allTime?: boolean | null;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["TotalRevenueAnalyticsOut"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Revenue Chart Analytics */
  revenue_chart_analytics_api_v1_admin_analytics_revenue_chart_get: {
    parameters: {
      query?: {
        fromDate?: string | null;
        toDate?: string | null;
        allTime?: boolean | null;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AdminRevenueChartOut"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Session Info Analytics */
  session_info_analytics_api_v1_admin_analytics_session_info_get: {
    parameters: {
      query?: {
        fromDate?: string | null;
        toDate?: string | null;
        allTime?: boolean | null;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["SessionInfoAnalyticsOut"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Total User Analytics */
  total_user_analytics_api_v1_admin_analytics_users_get: {
    parameters: {
      query?: {
        fromDate?: string | null;
        toDate?: string | null;
        allTime?: boolean | null;
        userType?: components["schemas"]["UserType"] | null;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserAnalyticsOut"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Best User Analytics */
  get_best_user_analytics_api_v1_admin_analytics_best_users_get: {
    parameters: {
      query?: {
        fromDate?: string | null;
        toDate?: string | null;
        allTime?: boolean | null;
        limit?: number | null;
        userType?: components["schemas"]["UserType"] | null;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AdminBestUserOut"][];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Admin Analytics Summary */
  get_admin_analytics_summary_api_v1_admin_analytics_summary_get: {
    parameters: {
      query?: {
        fromDate?: string | null;
        toDate?: string | null;
        allTime?: boolean | null;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AdminAnalyticsSummary"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Coach Analytics Summary */
  coach_analytics_summary_api_v1_admin_analytics_coach__coach_id__summary_get: {
    parameters: {
      query?: {
        fromDate?: string | null;
        toDate?: string | null;
        allTime?: boolean | null;
      };
      path: {
        coach_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AdminCoachAnalyticsSummary"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Client Analytics Summary */
  client_analytics_summary_api_v1_admin_analytics_client__client_id__summary_get: {
    parameters: {
      query?: {
        fromDate?: string | null;
        toDate?: string | null;
        allTime?: boolean | null;
      };
      path: {
        client_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AdminClientAnalyticsSummary"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Dashboard Analytics */
  dashboard_analytics_api_v1_admin_analytics_dashboard_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AdminDashboardAnalytics"];
        };
      };
    };
  };
  /** Cache Sessions */
  cache_sessions_api_v1_admin_cache_sessions_post: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["StretchResponse"];
        };
      };
    };
  };
  /** Cache Coaches */
  cache_coaches_api_v1_admin_cache_coaches_post: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["StretchResponse"];
        };
      };
    };
  };
  /** Cache Chat Users */
  cache_chat_users_api_v1_admin_cache_sb_chat_post: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["StretchResponse"];
        };
      };
    };
  };
  /** Cache Categories */
  cache_categories_api_v1_admin_cache_category_post: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["StretchResponse"];
        };
      };
    };
  };
  /** Cache Businesses */
  cache_businesses_api_v1_admin_cache_businesses_post: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["StretchResponse"];
        };
      };
    };
  };
  /** Rebuild Cache */
  rebuild_cache_api_v1_admin_cache_rebuild_post: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["StretchResponse"];
        };
      };
    };
  };
  /** Cache Analytics */
  cache_analytics_api_v1_admin_cache_analytics_post: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["StretchResponse"];
        };
      };
    };
  };
  /** Cache Addresses */
  cache_addresses_api_v1_admin_cache_addresses_post: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UpdateResponse"];
        };
      };
    };
  };
  /** Get Equipments */
  get_equipments_api_v1_admin_equipments_get: {
    parameters: {
      query?: {
        search?: string | null;
        status?: components["schemas"]["AdminEquipmentUserStatus"] | null;
        page?: number | null;
        limit?: number | null;
        sorting?: components["schemas"]["AdminEquipmentOrderFields"] | null;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AdminEquipmentSummaryViewOut"][];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Equipments Count */
  get_equipments_count_api_v1_admin_equipments_count_get: {
    parameters: {
      query?: {
        search?: string | null;
        status?: components["schemas"]["AdminEquipmentUserStatus"] | null;
        page?: number | null;
        limit?: number | null;
        sorting?: components["schemas"]["AdminEquipmentOrderFields"] | null;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AdminTotalCountOut"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Marketing Groups */
  get_marketing_groups_api_v1_admin_marketing_groups_get: {
    parameters: {
      query?: {
        search?: string | null;
        page?: number | null;
        limit?: number | null;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AdminMarketingGroupOut"][];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Create Marketing Group */
  create_marketing_group_api_v1_admin_marketing_group_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["MarketingGroupIn"];
      };
    };
    responses: {
      /** @description Successful Response */
      201: {
        content: {
          "application/json": components["schemas"]["AdminMarketingGroupOut"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update Marketing Group */
  update_marketing_group_api_v1_admin_marketing_group__marketing_id__put: {
    parameters: {
      path: {
        marketing_id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["MarketingGroupUpdateIn"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AdminMarketingGroupOut"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete Marketing Group */
  delete_marketing_group_api_v1_admin_marketing_group__marketing_id__delete: {
    parameters: {
      path: {
        marketing_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["DeleteResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Set Marketing Groups Order */
  set_marketing_groups_order_api_v1_admin_marketing_groups_order_put: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["OrderIn"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["StretchResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
}
