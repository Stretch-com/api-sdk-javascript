/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/api/v1/chat/channels": {
    /** Get Channels */
    get: operations["get_channels_api_v1_chat_channels_get"];
  };
  "/api/v1/chat/channels/info": {
    /** Get Channel Unread */
    get: operations["get_channel_unread_api_v1_chat_channels_info_get"];
  };
  "/api/v1/chat/channel/{channel_id}/upload": {
    /** Upload Image */
    post: operations["upload_image_api_v1_chat_channel__channel_id__upload_post"];
  };
  "/api/v1/chat/drop": {
    /** Get Direct Websocket */
    get: operations["get_direct_websocket_api_v1_chat_drop_get"];
  };
  "/api/v1/chat/sb/messages": {
    /** Get Messages */
    get: operations["get_messages_api_v1_chat_sb_messages_get"];
  };
  "/api/v1/chat/sb/message": {
    /** Send Message */
    post: operations["send_message_api_v1_chat_sb_message_post"];
  };
  "/api/v1/chat/sb/message/{message_id}": {
    /** Delete Message */
    delete: operations["delete_message_api_v1_chat_sb_message__message_id__delete"];
  };
  "/api/v1/chat/sb/channels": {
    /** Get Channels */
    get: operations["get_channels_api_v1_chat_sb_channels_get"];
  };
  "/api/v1/chat/sb/channel/{user_id}": {
    /** Get Or Create Channel */
    post: operations["get_or_create_channel_api_v1_chat_sb_channel__user_id__post"];
    /** Delete User Channel */
    delete: operations["delete_user_channel_api_v1_chat_sb_channel__user_id__delete"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** Body_upload_image_api_v1_chat_channel__channel_id__upload_post */
    Body_upload_image_api_v1_chat_channel__channel_id__upload_post: {
      /**
       * File
       * Format: binary
       */
      file: File;
    };
    /** ChannelDirect */
    ChannelDirect: {
      /** Channelid */
      channelId?: string | null;
      /**
       * Channeltype
       * @default direct
       */
      channelType?: string | null;
      /** @default [] */
      user?: components["schemas"]["ChannelMember"] | null;
      /**
       * Lastmessage
       * @default
       */
      lastMessage?: string | null;
      /**
       * Unread
       * @default 0
       */
      unread?: number | null;
    };
    /** ChannelMember */
    ChannelMember: {
      /** Userid */
      userId?: string | null;
      /** Fullname */
      fullName?: string | null;
      /** Lastonline */
      lastOnline?: string | null;
      /**
       * Avatarurl
       * @description URL for avatar profile picture
       */
      avatarUrl?: string | null;
    };
    /** ErrorResponse */
    ErrorResponse: {
      /** Error */
      error: string;
      /** Message */
      message: string;
      /** Code */
      code: number;
    };
    /** HTTPValidationError */
    HTTPValidationError: {
      /** Detail */
      detail?: components["schemas"]["ValidationError"][];
    };
    /** SBDirectChannelOut */
    SBDirectChannelOut: {
      /** Chaturl */
      chatUrl: string;
      /** Unreadmessagecount */
      unreadMessageCount: number;
      /**
       * Modifiedat
       * Format: date-time
       */
      modifiedAt: string;
      user?: components["schemas"]["SBMessageUserOut"] | null;
      /** Messagetype */
      messageType?: string | null;
      /** Lastmessage */
      lastMessage?: string | null;
      /**
       * Freeze
       * @default false
       */
      freeze?: boolean;
    };
    /** SBMessageIn */
    SBMessageIn: {
      /** Channelurl */
      channelUrl: string;
      /** Message */
      message: string;
      /** @default message */
      messageType?: components["schemas"]["SBMessageType"] | null;
    };
    /** SBMessageOut */
    SBMessageOut: {
      /** Messageid */
      messageId: number;
      type: components["schemas"]["SBMessageType"];
      /** Message */
      message: string;
      /**
       * Createdat
       * Format: date-time
       */
      createdAt: string;
      /** File */
      file?: Record<string, never> | null;
      /** Poll */
      poll?: Record<string, never> | null;
      user?: components["schemas"]["SBMessageUserOut"] | null;
    };
    /**
     * SBMessageType
     * @enum {string}
     */
    SBMessageType: "admin" | "message" | "file";
    /** SBMessageUserOut */
    SBMessageUserOut: {
      /** Id */
      id?: string | null;
      /** Displayname */
      displayName?: string | null;
      /** Initials */
      initials?: string | null;
      /** Avatarurl */
      avatarUrl?: string | null;
    };
    /** ValidationError */
    ValidationError: {
      /** Location */
      loc: (string | number)[];
      /** Message */
      msg: string;
      /** Error Type */
      type: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {
  /** Get Channels */
  get_channels_api_v1_chat_channels_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ChannelDirect"][];
        };
      };
    };
  };
  /** Get Channel Unread */
  get_channel_unread_api_v1_chat_channels_info_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  /** Upload Image */
  upload_image_api_v1_chat_channel__channel_id__upload_post: {
    parameters: {
      path: {
        channel_id: string;
      };
    };
    requestBody: {
      content: {
        "multipart/form-data": components["schemas"]["Body_upload_image_api_v1_chat_channel__channel_id__upload_post"];
      };
    };
    responses: {
      /** @description Successful Response */
      201: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Bad Request */
      404: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Direct Websocket */
  get_direct_websocket_api_v1_chat_drop_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  /** Get Messages */
  get_messages_api_v1_chat_sb_messages_get: {
    parameters: {
      query: {
        channel_url: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["SBMessageOut"][];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Send Message */
  send_message_api_v1_chat_sb_message_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["SBMessageIn"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["SBMessageOut"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete Message */
  delete_message_api_v1_chat_sb_message__message_id__delete: {
    parameters: {
      query: {
        channel_url: string;
      };
      path: {
        message_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Channels */
  get_channels_api_v1_chat_sb_channels_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["SBDirectChannelOut"][];
        };
      };
    };
  };
  /** Get Or Create Channel */
  get_or_create_channel_api_v1_chat_sb_channel__user_id__post: {
    parameters: {
      path: {
        user_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["SBDirectChannelOut"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete User Channel */
  delete_user_channel_api_v1_chat_sb_channel__user_id__delete: {
    parameters: {
      path: {
        user_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
}
